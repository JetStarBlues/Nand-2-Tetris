/**
 * Static Image factory class.
 *
 * Requires Image.jack
 *
 * Generated from "ball02.pbm" by pbm2jack.py
 *
 * Copyright 2013-2016 Gavin Stewart.
 *
 * You are required to give attribution to the author (Gavin Stewart) for any
 * use of this program (GPLv3 Section 7b).
 * 
 * Trying to pass off my code as your own in your Elements of Computing classes
 * will result in a cursed life of forever buggy software.
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
class ball02 {

    /**
     * newImage - returns an Image object containing bitmap data.
     */
    function Image newImage () {
        var Image i;
        var int width, height;

        let width = 5;
        let height = 60;

        let i = Image.newBitmap(width, height);

        // do i.push(0,0,0,0,0,0,-12800,63,0,0,0,448,6146,0,0,0);
        // do i.push(112,15366,0,0,0,-32740,32319,0,0,0,-16378,32767,0,0,0,-4093);
        // do i.push(-3841,8,0,-32767-1,-2047,-32513,48,0,0,-1021,127,96,0,-32767-1,-481,63);
        // do i.push(206,0,-16384,-1,63,510,0,-8192,-769,63,126,0,-4096,-8065,31,254);
        // do i.push(0,-2048,63,31,254,0,-2048,31,12,510,0,-1024,31,16,510,0);
        // do i.push(-1024,15,248,510,0,-512,15,2040,510,0,-512,7,16380,1022,0,-256);
        // do i.push(7,-4,1022,0,-32,3,-2,1016,0,-800,3,-2,960,0,-8096,1);
        // do i.push(-2,768,0,96,1,-1,0,0,112,2,-1,14336,0,48,31,32767);
        // do i.push(30720,0,48,-32513,32767,-2048,0,48,-30721,32767,-2048,0,-32720,-8193,32767,-2048);
        // do i.push(0,-32720,16383,16383,-2048,0,-32720,16383,16376,-1024,0,-32720,8191,16320,-1024,0);
        // do i.push(-16336,8191,7680,-1024,0,-16336,8191,6144,-1024,0,-16336,4095,8192,31744,0,-16352);
        // do i.push(4095,-4096,32257,0,-16192,4095,-4096,32263,0,-14400,2047,-4096,32319,0,-8320,2047);
        // do i.push(-2048,32511,0,16256,2047,-2048,12543,0,16256,1016,-1024,255,0,16128,960,-1024);
        // do i.push(127,0,16128,512,-512,127,0,16128,1024,-512,63,0,15872,15872,-256,63);
        // do i.push(0,15872,-512,-255,31,0,31744,-512,-121,15,0,31744,-512,-1,15,0);
        // do i.push(30720,-256,-449,7,0,-2048,-256,-4065,3,0,-28672,-256,-16369,1,0,8192);
        // do i.push(-254,7,1,0,0,-242,-32761,15,0,0,-4,-16381,31,0,0,-904);
        // do i.push(-8191,7,0,0,-8072,-2048,3,0,0,-16288,-512,0,0,0,-8128,16131);
        // do i.push(0,0,0,-1024,4079,0,0,0,0,0,0,0,0,0,0,0);

        i.push(0, 0, 0, 0, 0, 0, 115, -1024, 0, 0, 0, 896, 16408, 0, 0, 0);
        i.push(3584, 24636, 0, 0, 0, 14337, -898, 0, 0, 0, 24579, -2, 0, 0, 0, -16369);
        i.push(-241, 4096, 0, 1, -32737, -255, 3072, 0, 0, -16321, -512, 1536, 0, 1, -1921, -1024);
        i.push(29440, 0, 3, -1, -1024, 32640, 0, 7, -193, -1024, 32256, 0, 15, -505, -2048, 32512);
        i.push(0, 31, -1024, -2048, 32512, 0, 31, -2048, 12288, 32640, 0, 63, -2048, 2048, 32640, 0);
        i.push(63, -4096, 7936, 32640, 0, 127, -4096, 8160, 32640, 0, 127, -8192, 16380, 32704, 0, 255);
        i.push(-8192, 16383, 32704, 0, 2047, -16384, 32767, 8128, 0, 1855, -16384, 32767, 960, 0, 1543, !32767);
        i.push(32767, 192, 0, 1536, !32767, -1, 0, 0, 3584, 16384, -1, 28, 0, 3072, -2048, -2);
        i.push(30, 0, 3072, -255, -2, 31, 0, 3072, -31, -2, 31, 0, 3073, -5, -2, 31);
        i.push(0, 3073, -4, -4, 31, 0, 3073, -4, 8188, 63, 0, 3073, -8, 1020, 63, 0);
        i.push(3075, -8, 120, 63, 0, 3075, -8, 24, 63, 0, 3075, -16, 4, 62, 0, 1027);
        i.push(-16, 15, -32642, 0, 771, -16, 15, -8066, 0, 995, -32, 15, -898, 0, 507, -32);
        i.push(31, -130, 0, 508, -32, 31, -244, 0, 508, 8128, 63, -256, 0, 252, 960, 63);
        i.push(-512, 0, 252, 64, 127, -512, 0, 252, 32, 127, -1024, 0, 124, 124, 255, -1024);
        i.push(0, 124, 127, -32513, -2048, 0, 62, 127, -7681, -4096, 0, 62, 127, -1, -4096, 0);
        i.push(30, 255, -897, -8192, 0, 31, 255, -2033, -16384, 0, 9, 255, -4093, !32767, 0, 4);
        i.push(16639, -8192, !32767, 0, 0, 28927, -8191, -4096, 0, 0, 16383, -16381, -2048, 0, 0, 7743);
        i.push(-32761, -8192, 0, 0, 7687, 31, -16384, 0, 0, 1539, 127, 0, 0, 0, 519, -16132);
        i.push(0, 0, 0, 63, -2064, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);

        return i;
    }
}
