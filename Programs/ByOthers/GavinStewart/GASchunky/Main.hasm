// --- Begin pointer setup

// set SP
@256
D = A
@SP
M = D

// set LCL
@LCL
M = D

// set ARG
@ARG
M = D

// set THIS
@9999
D = A
@THIS
M = D

// set THAT
@THAT
M = D

// --- end pointer setup


// --- Call Sys.init()
@Sys.init
0 ; JMP


// === Plasma ===

// function Plasma.new 1
(Plasma.new)
@SP
D = M
@LCL
M = D
@SP
A = M
M = 0
@SP
M = M + 1
// push constant 29
@29
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Memory.alloc 1
@returnPosition0
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Memory.alloc
0 ; JMP
(returnPosition0)
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// call Sinus.init 0
@returnPosition1
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@5
D = A
@SP
D = M - D
@ARG
M = D
@Sinus.init
0 ; JMP
(returnPosition1)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 360
@360
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 256
@256
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Sinus.resample 3
@returnPosition2
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@8
D = A
@SP
D = M - D
@ARG
M = D
@Sinus.resample
0 ; JMP
(returnPosition2)
// pop this 3
@3
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND1
(WHILE_COND1)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 256
@256
D = A
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true0
D ; JLT
D = 0
@comp_end0
0 ; JMP
(comp_true0)
D = 1
(comp_end0)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY1
@SP
AM = M - 1
D = M
@WHILE_BODY1
D ; JNE
// goto WHILE_END1
@WHILE_END1
0 ; JMP
// label WHILE_BODY1
(WHILE_BODY1)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push constant 100
@100
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push constant 163
@163
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition3
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition3)
// push constant 127
@127
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push constant 255
@255
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.divide 2
@returnPosition4
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.divide
0 ; JMP
(returnPosition4)
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND1
@WHILE_COND1
0 ; JMP
// label WHILE_END1
(WHILE_END1)
// call Dither4x4.init 0
@returnPosition5
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@5
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4.init
0 ; JMP
(returnPosition5)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4.getTable 1
@returnPosition6
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4.getTable
0 ; JMP
(returnPosition6)
// pop this 4
@4
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4.getTable 1
@returnPosition7
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4.getTable
0 ; JMP
(returnPosition7)
// pop this 5
@5
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4.getTable 1
@returnPosition8
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4.getTable
0 ; JMP
(returnPosition8)
// pop this 6
@6
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4.getTable 1
@returnPosition9
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4.getTable
0 ; JMP
(returnPosition9)
// pop this 7
@7
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// call Dither4x4.getOffset 0
@returnPosition10
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@5
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4.getOffset
0 ; JMP
(returnPosition10)
// pop this 8
@8
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 8
@8
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 9
@9
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 5
@5
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 8
@8
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 10
@10
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 6
@6
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 8
@8
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 11
@11
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 8
@8
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 12
@12
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push pointer 0
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 3
@3
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Plasma.setPosition 5
@returnPosition11
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@10
D = A
@SP
D = M - D
@ARG
M = D
@Plasma.setPosition
0 ; JMP
(returnPosition11)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push pointer 0
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Plasma.setParameters 13
@returnPosition12
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@18
D = A
@SP
D = M - D
@ARG
M = D
@Plasma.setParameters
0 ; JMP
(returnPosition12)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push pointer 0
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Plasma.new
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Plasma.new
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Plasma.new
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Plasma.new
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Plasma.new
A = M - D
A = M
0 ; JMP
// function Plasma.dispose 0
(Plasma.dispose)
@SP
D = M
@LCL
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Array.dispose 1
@returnPosition13
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Array.dispose
0 ; JMP
(returnPosition13)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push pointer 0
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Memory.dealloc 1
@returnPosition14
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Memory.dealloc
0 ; JMP
(returnPosition14)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Plasma.dispose
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Plasma.dispose
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Plasma.dispose
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Plasma.dispose
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Plasma.dispose
A = M - D
A = M
0 ; JMP
// function Plasma.setPosition 0
(Plasma.setPosition)
@SP
D = M
@LCL
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push constant 16384
@16384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition15
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition15)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 0
@0
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 3
@3
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 1
@1
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 4
@4
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 2
@2
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Plasma.setPosition
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Plasma.setPosition
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Plasma.setPosition
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Plasma.setPosition
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Plasma.setPosition
A = M - D
A = M
0 ; JMP
// function Plasma.setParameters 0
(Plasma.setParameters)
@SP
D = M
@LCL
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 13
@13
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 16
@16
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 3
@3
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 19
@19
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 4
@4
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 22
@22
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 5
@5
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 14
@14
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 6
@6
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 17
@17
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 7
@7
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 20
@20
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 8
@8
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 23
@23
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 9
@9
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 15
@15
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 10
@10
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 18
@18
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 11
@11
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 21
@21
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 12
@12
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 24
@24
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 15
@15
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 25
@25
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 18
@18
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 26
@26
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 21
@21
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 27
@27
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 24
@24
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 28
@28
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Plasma.setParameters
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Plasma.setParameters
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Plasma.setParameters
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Plasma.setParameters
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Plasma.setParameters
A = M - D
A = M
0 ; JMP
// function Plasma.setShadeOffset 0
(Plasma.setShadeOffset)
@SP
D = M
@LCL
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true1
D ; JLT
D = 0
@comp_end1
0 ; JMP
(comp_true1)
D = 1
(comp_end1)
@SP
A = M - 1
M = D
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true2
D ; JGT
D = 0
@comp_end2
0 ; JMP
(comp_true2)
D = 1
(comp_end2)
@SP
A = M - 1
M = D
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// if-goto IF_THEN1
@SP
AM = M - 1
D = M
@IF_THEN1
D ; JNE
// goto IF_END1
@IF_END1
0 ; JMP
// label IF_THEN1
(IF_THEN1)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Plasma.setShadeOffset
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Plasma.setShadeOffset
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Plasma.setShadeOffset
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Plasma.setShadeOffset
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Plasma.setShadeOffset
A = M - D
A = M
0 ; JMP
// label IF_END1
(IF_END1)
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition16
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition16)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 9
@9
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 5
@5
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition17
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition17)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 10
@10
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 6
@6
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition18
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition18)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 11
@11
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition19
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition19)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 12
@12
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Plasma.setShadeOffset
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Plasma.setShadeOffset
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Plasma.setShadeOffset
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Plasma.setShadeOffset
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Plasma.setShadeOffset
A = M - D
A = M
0 ; JMP
// function Plasma.drawFrame 12
(Plasma.drawFrame)
@SP
D = M
@LCL
M = D
@SP
D = M
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
@12
D = A
@SP
M = M + D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push this 27
@27
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 28
@28
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 5
@5
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 0
@0
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 11
@11
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 1
@1
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND2
(WHILE_COND2)
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 2
@2
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true3
D ; JLT
D = 0
@comp_end3
0 ; JMP
(comp_true3)
D = 1
(comp_end3)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY2
@SP
AM = M - 1
D = M
@WHILE_BODY2
D ; JNE
// goto WHILE_END2
@WHILE_END2
0 ; JMP
// label WHILE_BODY2
(WHILE_BODY2)
// push local 11
@11
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 10
@10
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 25
@25
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 26
@26
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND3
(WHILE_COND3)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 1
@1
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true4
D ; JLT
D = 0
@comp_end4
0 ; JMP
(comp_true4)
D = 1
(comp_end4)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY3
@SP
AM = M - 1
D = M
@WHILE_BODY3
D ; JNE
// goto WHILE_END3
@WHILE_END3
0 ; JMP
// label WHILE_BODY3
(WHILE_BODY3)
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 255
@255
D = A
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 255
@255
D = A
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 255
@255
D = A
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 255
@255
D = A
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.divide 2
@returnPosition20
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.divide
0 ; JMP
(returnPosition20)
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition21
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition21)
// pop local 6
@6
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 13
@13
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 16
@16
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 255
@255
D = A
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 255
@255
D = A
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 255
@255
D = A
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 255
@255
D = A
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.divide 2
@returnPosition22
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.divide
0 ; JMP
(returnPosition22)
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition23
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition23)
// pop local 7
@7
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 13
@13
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 16
@16
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 255
@255
D = A
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 255
@255
D = A
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 255
@255
D = A
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 255
@255
D = A
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.divide 2
@returnPosition24
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.divide
0 ; JMP
(returnPosition24)
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition25
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition25)
// pop local 8
@8
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 13
@13
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 16
@16
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 255
@255
D = A
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 255
@255
D = A
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 255
@255
D = A
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 255
@255
D = A
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.divide 2
@returnPosition26
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.divide
0 ; JMP
(returnPosition26)
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition27
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition27)
// pop local 9
@9
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 13
@13
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 16
@16
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 10
@10
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 9
@9
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 10
@10
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 11
@11
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 8
@8
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 12
@12
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 9
@9
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 10
@10
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 9
@9
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 10
@10
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 11
@11
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 8
@8
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 12
@12
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 9
@9
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 64
@64
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 10
@10
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 9
@9
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 10
@10
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 11
@11
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 8
@8
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 12
@12
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 9
@9
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 96
@96
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 10
@10
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 9
@9
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 10
@10
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 11
@11
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 8
@8
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 12
@12
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 9
@9
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 10
@10
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 10
@10
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND3
@WHILE_COND3
0 ; JMP
// label WHILE_END3
(WHILE_END3)
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 19
@19
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 22
@22
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 5
@5
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 11
@11
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 128
@128
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 11
@11
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 1
@1
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND2
@WHILE_COND2
0 ; JMP
// label WHILE_END2
(WHILE_END2)
// push this 25
@25
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 14
@14
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 25
@25
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 26
@26
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 17
@17
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 26
@26
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 27
@27
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 20
@20
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 27
@27
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 28
@28
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 23
@23
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 28
@28
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Plasma.drawFrame
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Plasma.drawFrame
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Plasma.drawFrame
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Plasma.drawFrame
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Plasma.drawFrame
A = M - D
A = M
0 ; JMP

// === Head ===

// function Head.newChunkyImage 3
(Head.newChunkyImage)
@SP
D = M
@LCL
M = D
@SP
D = M
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
@3
D = A
@SP
M = M + D
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 1
@1
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.newBitmap 2
@returnPosition28
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.newBitmap
0 ; JMP
(returnPosition28)
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition29
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition29)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition30
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition30)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition31
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition31)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition32
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition32)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition33
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition33)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition34
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition34)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16
@16
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16
@16
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition35
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition35)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16
@16
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16
@16
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition36
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition36)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16
@16
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16
@16
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition37
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition37)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16
@16
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16
@16
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition38
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition38)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16
@16
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition39
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition39)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16
@16
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition40
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition40)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition41
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition41)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition42
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition42)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition43
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition43)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition44
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition44)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition45
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition45)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition46
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition46)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition47
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition47)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition48
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition48)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition49
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition49)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition50
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition50)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition51
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition51)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition52
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition52)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition53
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition53)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition54
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition54)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition55
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition55)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition56
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition56)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition57
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition57)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition58
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition58)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition59
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition59)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition60
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition60)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition61
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition61)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition62
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition62)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition63
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition63)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition64
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition64)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition65
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition65)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition66
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition66)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition67
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition67)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition68
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition68)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition69
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition69)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition70
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition70)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition71
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition71)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition72
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition72)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition73
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition73)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition74
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition74)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition75
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition75)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition76
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition76)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition77
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition77)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition78
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition78)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition79
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition79)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition80
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition80)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition81
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition81)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition82
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition82)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition83
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition83)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition84
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition84)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition85
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition85)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition86
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition86)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition87
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition87)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition88
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition88)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition89
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition89)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition90
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition90)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition91
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition91)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.push 17
@returnPosition92
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.push
0 ; JMP
(returnPosition92)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Head.newChunkyImage
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Head.newChunkyImage
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Head.newChunkyImage
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Head.newChunkyImage
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Head.newChunkyImage
A = M - D
A = M
0 ; JMP

// === GASchunky ===

// function GASchunky.new 1
(GASchunky.new)
@SP
D = M
@LCL
M = D
@SP
A = M
M = 0
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Memory.alloc 1
@returnPosition93
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Memory.alloc
0 ; JMP
(returnPosition93)
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// call Sinus.init 0
@returnPosition94
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@5
D = A
@SP
D = M - D
@ARG
M = D
@Sinus.init
0 ; JMP
(returnPosition94)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// call Monitor.newImage 0
@returnPosition95
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@5
D = A
@SP
D = M - D
@ARG
M = D
@Monitor.newImage
0 ; JMP
(returnPosition95)
// pop this 1
@1
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// call Head.newChunkyImage 0
@returnPosition96
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@5
D = A
@SP
D = M - D
@ARG
M = D
@Head.newChunkyImage
0 ; JMP
(returnPosition96)
// pop this 0
@0
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 42
@42
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 148
@148
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Plasma.new 4
@returnPosition97
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@9
D = A
@SP
D = M - D
@ARG
M = D
@Plasma.new
0 ; JMP
(returnPosition97)
// pop this 2
@2
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 0
@0
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 42
@42
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 148
@148
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call RotoZoom.new 5
@returnPosition98
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@10
D = A
@SP
D = M - D
@ARG
M = D
@RotoZoom.new
0 ; JMP
(returnPosition98)
// pop this 3
@3
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 22
@22
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Output.moveCursor 2
@returnPosition99
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Output.moveCursor
0 ; JMP
(returnPosition99)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 58
@58
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.new 1
@returnPosition100
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@String.new
0 ; JMP
(returnPosition100)
// push constant 82
@82
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition101
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition101)
// push constant 101
@101
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition102
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition102)
// push constant 97
@97
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition103
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition103)
// push constant 108
@108
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition104
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition104)
// push constant 45
@45
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition105
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition105)
// push constant 116
@116
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition106
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition106)
// push constant 105
@105
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition107
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition107)
// push constant 109
@109
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition108
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition108)
// push constant 101
@101
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition109
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition109)
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition110
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition110)
// push constant 80
@80
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition111
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition111)
// push constant 108
@108
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition112
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition112)
// push constant 97
@97
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition113
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition113)
// push constant 115
@115
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition114
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition114)
// push constant 109
@109
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition115
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition115)
// push constant 97
@97
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition116
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition116)
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition117
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition117)
// push constant 97
@97
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition118
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition118)
// push constant 110
@110
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition119
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition119)
// push constant 100
@100
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition120
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition120)
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition121
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition121)
// push constant 82
@82
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition122
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition122)
// push constant 111
@111
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition123
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition123)
// push constant 116
@116
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition124
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition124)
// push constant 111
@111
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition125
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition125)
// push constant 122
@122
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition126
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition126)
// push constant 111
@111
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition127
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition127)
// push constant 111
@111
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition128
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition128)
// push constant 109
@109
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition129
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition129)
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition130
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition130)
// push constant 100
@100
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition131
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition131)
// push constant 101
@101
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition132
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition132)
// push constant 109
@109
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition133
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition133)
// push constant 111
@111
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition134
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition134)
// push constant 46
@46
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition135
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition135)
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition136
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition136)
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition137
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition137)
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition138
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition138)
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition139
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition139)
// push constant 71
@71
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition140
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition140)
// push constant 97
@97
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition141
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition141)
// push constant 118
@118
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition142
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition142)
// push constant 105
@105
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition143
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition143)
// push constant 110
@110
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition144
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition144)
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition145
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition145)
// push constant 83
@83
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition146
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition146)
// push constant 116
@116
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition147
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition147)
// push constant 101
@101
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition148
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition148)
// push constant 119
@119
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition149
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition149)
// push constant 97
@97
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition150
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition150)
// push constant 114
@114
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition151
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition151)
// push constant 116
@116
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition152
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition152)
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition153
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition153)
// push constant 50
@50
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition154
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition154)
// push constant 48
@48
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition155
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition155)
// push constant 49
@49
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition156
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition156)
// push constant 51
@51
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition157
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition157)
// push constant 46
@46
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition158
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition158)
// call Output.printString 1
@returnPosition159
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Output.printString
0 ; JMP
(returnPosition159)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Output.moveCursor 2
@returnPosition160
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Output.moveCursor
0 ; JMP
(returnPosition160)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push pointer 0
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_GASchunky.new
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_GASchunky.new
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_GASchunky.new
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_GASchunky.new
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_GASchunky.new
A = M - D
A = M
0 ; JMP
// function GASchunky.dispose 0
(GASchunky.dispose)
@SP
D = M
@LCL
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push this 1
@1
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Image.dispose 1
@returnPosition161
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Image.dispose
0 ; JMP
(returnPosition161)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// call image.dispose 0
@returnPosition162
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@5
D = A
@SP
D = M - D
@ARG
M = D
@image.dispose
0 ; JMP
(returnPosition162)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push pointer 0
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Memory.deAlloc 1
@returnPosition163
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Memory.deAlloc
0 ; JMP
(returnPosition163)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_GASchunky.dispose
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_GASchunky.dispose
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_GASchunky.dispose
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_GASchunky.dispose
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_GASchunky.dispose
A = M - D
A = M
0 ; JMP
// function GASchunky.run 11
(GASchunky.run)
@SP
D = M
@LCL
M = D
@SP
D = M
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
@11
D = A
@SP
M = M + D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push constant 224
@224
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 6
@6
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 50
@50
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 7
@7
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 8
@8
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 315
@315
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 45
@45
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 5
@5
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 16
@16
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 9
@9
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 10
@10
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND1
(WHILE_COND1)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// not
@SP
A = M - 1
M = ! M
// if-goto WHILE_BODY1
@SP
AM = M - 1
D = M
@WHILE_BODY1
D ; JNE
// goto WHILE_END1
@WHILE_END1
0 ; JMP
// label WHILE_BODY1
(WHILE_BODY1)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 1000
@1000
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Sys.wait 1
@returnPosition164
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Sys.wait
0 ; JMP
(returnPosition164)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push pointer 0
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 1
@1
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call GASchunky.fadeImageIn 4
@returnPosition165
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@9
D = A
@SP
D = M - D
@ARG
M = D
@GASchunky.fadeImageIn
0 ; JMP
(returnPosition165)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 3000
@3000
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Sys.wait 1
@returnPosition166
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Sys.wait
0 ; JMP
(returnPosition166)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push pointer 0
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 42
@42
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 148
@148
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call GASchunky.fadeErase 5
@returnPosition167
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@10
D = A
@SP
D = M - D
@ARG
M = D
@GASchunky.fadeErase
0 ; JMP
(returnPosition167)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 9
@9
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 2
@2
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 9
@9
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Plasma.setShadeOffset 2
@returnPosition168
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Plasma.setShadeOffset
0 ; JMP
(returnPosition168)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND2
(WHILE_COND2)
// push local 9
@9
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16
@16
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true5
D ; JGT
D = 0
@comp_end5
0 ; JMP
(comp_true5)
D = 1
(comp_end5)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY2
@SP
AM = M - 1
D = M
@WHILE_BODY2
D ; JNE
// goto WHILE_END2
@WHILE_END2
0 ; JMP
// label WHILE_BODY2
(WHILE_BODY2)
// push this 2
@2
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Plasma.drawFrame 1
@returnPosition169
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Plasma.drawFrame
0 ; JMP
(returnPosition169)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 9
@9
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop local 9
@9
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 2
@2
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 9
@9
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Plasma.setShadeOffset 2
@returnPosition170
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Plasma.setShadeOffset
0 ; JMP
(returnPosition170)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND2
@WHILE_COND2
0 ; JMP
// label WHILE_END2
(WHILE_END2)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 200
@200
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 1
@1
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND3
(WHILE_COND3)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true6
D ; JLT
D = 0
@comp_end6
0 ; JMP
(comp_true6)
D = 1
(comp_end6)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY3
@SP
AM = M - 1
D = M
@WHILE_BODY3
D ; JNE
// goto WHILE_END3
@WHILE_END3
0 ; JMP
// label WHILE_BODY3
(WHILE_BODY3)
// push this 2
@2
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Plasma.drawFrame 1
@returnPosition171
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Plasma.drawFrame
0 ; JMP
(returnPosition171)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND3
@WHILE_COND3
0 ; JMP
// label WHILE_END3
(WHILE_END3)
// label WHILE_COND4
(WHILE_COND4)
// push local 9
@9
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true7
D ; JGT
D = 0
@comp_end7
0 ; JMP
(comp_true7)
D = 1
(comp_end7)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY4
@SP
AM = M - 1
D = M
@WHILE_BODY4
D ; JNE
// goto WHILE_END4
@WHILE_END4
0 ; JMP
// label WHILE_BODY4
(WHILE_BODY4)
// push this 2
@2
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Plasma.drawFrame 1
@returnPosition172
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Plasma.drawFrame
0 ; JMP
(returnPosition172)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 9
@9
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop local 9
@9
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 2
@2
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 9
@9
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Plasma.setShadeOffset 2
@returnPosition173
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Plasma.setShadeOffset
0 ; JMP
(returnPosition173)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND4
@WHILE_COND4
0 ; JMP
// label WHILE_END4
(WHILE_END4)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 9
@9
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 9
@9
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call RotoZoom.setShadeOffset 2
@returnPosition174
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@RotoZoom.setShadeOffset
0 ; JMP
(returnPosition174)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND5
(WHILE_COND5)
// push local 9
@9
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16
@16
D = A
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true8
D ; JLT
D = 0
@comp_end8
0 ; JMP
(comp_true8)
D = 1
(comp_end8)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY5
@SP
AM = M - 1
D = M
@WHILE_BODY5
D ; JNE
// goto WHILE_END5
@WHILE_END5
0 ; JMP
// label WHILE_BODY5
(WHILE_BODY5)
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Sinus.cos 1
@returnPosition175
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Sinus.cos
0 ; JMP
(returnPosition175)
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.divide 2
@returnPosition176
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.divide
0 ; JMP
(returnPosition176)
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Sinus.sin 1
@returnPosition177
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Sinus.sin
0 ; JMP
(returnPosition177)
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.divide 2
@returnPosition178
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.divide
0 ; JMP
(returnPosition178)
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call RotoZoom.drawFrame 5
@returnPosition179
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@10
D = A
@SP
D = M - D
@ARG
M = D
@RotoZoom.drawFrame
0 ; JMP
(returnPosition179)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 9
@9
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 9
@9
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 9
@9
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call RotoZoom.setShadeOffset 2
@returnPosition180
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@RotoZoom.setShadeOffset
0 ; JMP
(returnPosition180)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 6
@6
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 8
@8
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 7
@7
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20
@20
D = A
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true9
D ; JLT
D = 0
@comp_end9
0 ; JMP
(comp_true9)
D = 1
(comp_end9)
@SP
A = M - 1
M = D
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 327
@327
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true10
D ; JGT
D = 0
@comp_end10
0 ; JMP
(comp_true10)
D = 1
(comp_end10)
@SP
A = M - 1
M = D
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// if-goto IF_THEN1
@SP
AM = M - 1
D = M
@IF_THEN1
D ; JNE
// goto IF_END1
@IF_END1
0 ; JMP
// label IF_THEN1
(IF_THEN1)
// push local 8
@8
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// pop local 8
@8
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 8
@8
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 7
@7
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END1
(IF_END1)
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 5
@5
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 359
@359
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true11
D ; JGT
D = 0
@comp_end11
0 ; JMP
(comp_true11)
D = 1
(comp_end11)
@SP
A = M - 1
M = D
// if-goto IF_THEN2
@SP
AM = M - 1
D = M
@IF_THEN2
D ; JNE
// goto IF_END2
@IF_END2
0 ; JMP
// label IF_THEN2
(IF_THEN2)
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 360
@360
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END2
(IF_END2)
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 359
@359
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true12
D ; JGT
D = 0
@comp_end12
0 ; JMP
(comp_true12)
D = 1
(comp_end12)
@SP
A = M - 1
M = D
// if-goto IF_THEN3
@SP
AM = M - 1
D = M
@IF_THEN3
D ; JNE
// goto IF_END3
@IF_END3
0 ; JMP
// label IF_THEN3
(IF_THEN3)
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 360
@360
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop local 5
@5
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END3
(IF_END3)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND5
@WHILE_COND5
0 ; JMP
// label WHILE_END5
(WHILE_END5)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 250
@250
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 1
@1
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND6
(WHILE_COND6)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true13
D ; JLT
D = 0
@comp_end13
0 ; JMP
(comp_true13)
D = 1
(comp_end13)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY6
@SP
AM = M - 1
D = M
@WHILE_BODY6
D ; JNE
// goto WHILE_END6
@WHILE_END6
0 ; JMP
// label WHILE_BODY6
(WHILE_BODY6)
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Sinus.cos 1
@returnPosition181
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Sinus.cos
0 ; JMP
(returnPosition181)
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.divide 2
@returnPosition182
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.divide
0 ; JMP
(returnPosition182)
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Sinus.sin 1
@returnPosition183
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Sinus.sin
0 ; JMP
(returnPosition183)
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.divide 2
@returnPosition184
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.divide
0 ; JMP
(returnPosition184)
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call RotoZoom.drawFrame 5
@returnPosition185
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@10
D = A
@SP
D = M - D
@ARG
M = D
@RotoZoom.drawFrame
0 ; JMP
(returnPosition185)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 6
@6
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 8
@8
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 7
@7
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20
@20
D = A
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true14
D ; JLT
D = 0
@comp_end14
0 ; JMP
(comp_true14)
D = 1
(comp_end14)
@SP
A = M - 1
M = D
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 327
@327
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true15
D ; JGT
D = 0
@comp_end15
0 ; JMP
(comp_true15)
D = 1
(comp_end15)
@SP
A = M - 1
M = D
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// if-goto IF_THEN4
@SP
AM = M - 1
D = M
@IF_THEN4
D ; JNE
// goto IF_END4
@IF_END4
0 ; JMP
// label IF_THEN4
(IF_THEN4)
// push local 8
@8
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// pop local 8
@8
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 8
@8
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 7
@7
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END4
(IF_END4)
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 5
@5
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 359
@359
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true16
D ; JGT
D = 0
@comp_end16
0 ; JMP
(comp_true16)
D = 1
(comp_end16)
@SP
A = M - 1
M = D
// if-goto IF_THEN5
@SP
AM = M - 1
D = M
@IF_THEN5
D ; JNE
// goto IF_END5
@IF_END5
0 ; JMP
// label IF_THEN5
(IF_THEN5)
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 360
@360
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END5
(IF_END5)
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 359
@359
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true17
D ; JGT
D = 0
@comp_end17
0 ; JMP
(comp_true17)
D = 1
(comp_end17)
@SP
A = M - 1
M = D
// if-goto IF_THEN6
@SP
AM = M - 1
D = M
@IF_THEN6
D ; JNE
// goto IF_END6
@IF_END6
0 ; JMP
// label IF_THEN6
(IF_THEN6)
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 360
@360
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop local 5
@5
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END6
(IF_END6)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND6
@WHILE_COND6
0 ; JMP
// label WHILE_END6
(WHILE_END6)
// label WHILE_COND7
(WHILE_COND7)
// push local 9
@9
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 33
@33
D = A
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true18
D ; JLT
D = 0
@comp_end18
0 ; JMP
(comp_true18)
D = 1
(comp_end18)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY7
@SP
AM = M - 1
D = M
@WHILE_BODY7
D ; JNE
// goto WHILE_END7
@WHILE_END7
0 ; JMP
// label WHILE_BODY7
(WHILE_BODY7)
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Sinus.cos 1
@returnPosition186
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Sinus.cos
0 ; JMP
(returnPosition186)
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.divide 2
@returnPosition187
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.divide
0 ; JMP
(returnPosition187)
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Sinus.sin 1
@returnPosition188
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Sinus.sin
0 ; JMP
(returnPosition188)
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.divide 2
@returnPosition189
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.divide
0 ; JMP
(returnPosition189)
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call RotoZoom.drawFrame 5
@returnPosition190
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@10
D = A
@SP
D = M - D
@ARG
M = D
@RotoZoom.drawFrame
0 ; JMP
(returnPosition190)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 9
@9
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 9
@9
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 9
@9
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call RotoZoom.setShadeOffset 2
@returnPosition191
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@RotoZoom.setShadeOffset
0 ; JMP
(returnPosition191)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 6
@6
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 8
@8
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 7
@7
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20
@20
D = A
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true19
D ; JLT
D = 0
@comp_end19
0 ; JMP
(comp_true19)
D = 1
(comp_end19)
@SP
A = M - 1
M = D
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 327
@327
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true20
D ; JGT
D = 0
@comp_end20
0 ; JMP
(comp_true20)
D = 1
(comp_end20)
@SP
A = M - 1
M = D
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// if-goto IF_THEN7
@SP
AM = M - 1
D = M
@IF_THEN7
D ; JNE
// goto IF_END7
@IF_END7
0 ; JMP
// label IF_THEN7
(IF_THEN7)
// push local 8
@8
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// pop local 8
@8
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 8
@8
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 7
@7
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END7
(IF_END7)
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 5
@5
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 359
@359
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true21
D ; JGT
D = 0
@comp_end21
0 ; JMP
(comp_true21)
D = 1
(comp_end21)
@SP
A = M - 1
M = D
// if-goto IF_THEN8
@SP
AM = M - 1
D = M
@IF_THEN8
D ; JNE
// goto IF_END8
@IF_END8
0 ; JMP
// label IF_THEN8
(IF_THEN8)
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 360
@360
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END8
(IF_END8)
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 359
@359
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true22
D ; JGT
D = 0
@comp_end22
0 ; JMP
(comp_true22)
D = 1
(comp_end22)
@SP
A = M - 1
M = D
// if-goto IF_THEN9
@SP
AM = M - 1
D = M
@IF_THEN9
D ; JNE
// goto IF_END9
@IF_END9
0 ; JMP
// label IF_THEN9
(IF_THEN9)
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 360
@360
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop local 5
@5
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END9
(IF_END9)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND7
@WHILE_COND7
0 ; JMP
// label WHILE_END7
(WHILE_END7)
// goto WHILE_COND1
@WHILE_COND1
0 ; JMP
// label WHILE_END1
(WHILE_END1)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_GASchunky.run
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_GASchunky.run
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_GASchunky.run
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_GASchunky.run
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_GASchunky.run
A = M - D
A = M
0 ; JMP
// function GASchunky.fadeImageIn 9
(GASchunky.fadeImageIn)
@SP
D = M
@LCL
M = D
@SP
D = M
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
@9
D = A
@SP
M = M + D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Image.getWidth 1
@returnPosition192
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Image.getWidth
0 ; JMP
(returnPosition192)
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Image.getHeight 1
@returnPosition193
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Image.getHeight
0 ; JMP
(returnPosition193)
// pop local 5
@5
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Image.getBitmap 1
@returnPosition194
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Image.getBitmap
0 ; JMP
(returnPosition194)
// pop local 6
@6
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition195
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition195)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 7
@7
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 16384
@16384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 3
@3
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition196
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition196)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition197
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition197)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// not
@SP
A = M - 1
M = ! M
// pop local 8
@8
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 1
@1
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND8
(WHILE_COND8)
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true23
D ; JLT
D = 0
@comp_end23
0 ; JMP
(comp_true23)
D = 1
(comp_end23)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY8
@SP
AM = M - 1
D = M
@WHILE_BODY8
D ; JNE
// goto WHILE_END8
@WHILE_END8
0 ; JMP
// label WHILE_BODY8
(WHILE_BODY8)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND9
(WHILE_COND9)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true24
D ; JLT
D = 0
@comp_end24
0 ; JMP
(comp_true24)
D = 1
(comp_end24)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY9
@SP
AM = M - 1
D = M
@WHILE_BODY9
D ; JNE
// goto WHILE_END9
@WHILE_END9
0 ; JMP
// label WHILE_BODY9
(WHILE_BODY9)
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// if-goto IF_THEN10
@SP
AM = M - 1
D = M
@IF_THEN10
D ; JNE
// goto IF_ELSE10
@IF_ELSE10
0 ; JMP
// label IF_THEN10
(IF_THEN10)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto IF_END10
@IF_END10
0 ; JMP
// label IF_ELSE10
(IF_ELSE10)
// push local 8
@8
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// if-goto IF_THEN11
@SP
AM = M - 1
D = M
@IF_THEN11
D ; JNE
// goto IF_ELSE11
@IF_ELSE11
0 ; JMP
// label IF_THEN11
(IF_THEN11)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 8
@8
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto IF_END11
@IF_END11
0 ; JMP
// label IF_ELSE11
(IF_ELSE11)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END11
(IF_END11)
// label IF_END10
(IF_END10)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND9
@WHILE_COND9
0 ; JMP
// label WHILE_END9
(WHILE_END9)
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Sys.wait 1
@returnPosition198
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Sys.wait
0 ; JMP
(returnPosition198)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 6
@6
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop local 7
@7
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 1
@1
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND8
@WHILE_COND8
0 ; JMP
// label WHILE_END8
(WHILE_END8)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_GASchunky.fadeImageIn
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_GASchunky.fadeImageIn
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_GASchunky.fadeImageIn
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_GASchunky.fadeImageIn
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_GASchunky.fadeImageIn
A = M - D
A = M
0 ; JMP
// function GASchunky.fadeErase 4
(GASchunky.fadeErase)
@SP
D = M
@LCL
M = D
@SP
D = M
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
@4
D = A
@SP
M = M + D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push constant 16384
@16384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition199
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition199)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 4
@4
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition200
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition200)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND10
(WHILE_COND10)
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 4
@4
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true25
D ; JLT
D = 0
@comp_end25
0 ; JMP
(comp_true25)
D = 1
(comp_end25)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY10
@SP
AM = M - 1
D = M
@WHILE_BODY10
D ; JNE
// goto WHILE_END10
@WHILE_END10
0 ; JMP
// label WHILE_BODY10
(WHILE_BODY10)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND11
(WHILE_COND11)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 3
@3
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true26
D ; JLT
D = 0
@comp_end26
0 ; JMP
(comp_true26)
D = 1
(comp_end26)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY11
@SP
AM = M - 1
D = M
@WHILE_BODY11
D ; JNE
// goto WHILE_END11
@WHILE_END11
0 ; JMP
// label WHILE_BODY11
(WHILE_BODY11)
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// if-goto IF_THEN12
@SP
AM = M - 1
D = M
@IF_THEN12
D ; JNE
// goto IF_ELSE12
@IF_ELSE12
0 ; JMP
// label IF_THEN12
(IF_THEN12)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto IF_END12
@IF_END12
0 ; JMP
// label IF_ELSE12
(IF_ELSE12)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END12
(IF_END12)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND11
@WHILE_COND11
0 ; JMP
// label WHILE_END11
(WHILE_END11)
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Sys.wait 1
@returnPosition201
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Sys.wait
0 ; JMP
(returnPosition201)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 1
@1
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND10
@WHILE_COND10
0 ; JMP
// label WHILE_END10
(WHILE_END10)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_GASchunky.fadeErase
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_GASchunky.fadeErase
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_GASchunky.fadeErase
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_GASchunky.fadeErase
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_GASchunky.fadeErase
A = M - D
A = M
0 ; JMP

// === Monitor ===

// function Monitor.newImage 3
(Monitor.newImage)
@SP
D = M
@LCL
M = D
@SP
D = M
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
@3
D = A
@SP
M = M + D
// push constant 17
@17
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 1
@1
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 230
@230
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Image.newBitmap 2
@returnPosition202
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Image.newBitmap
0 ; JMP
(returnPosition202)
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21844
@21844
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition203
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition203)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1365
@1365
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition204
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition204)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition205
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition205)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5461
@5461
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition206
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition206)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 767
@767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 43
@43
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition207
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition207)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 22527
@22527
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21856
@21856
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition208
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition208)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 10922
@10922
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2560
@2560
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition209
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition209)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 22101
@22101
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition210
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition210)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3242
@3242
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition211
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition211)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition212
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition212)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3242
@3242
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition213
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition213)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition214
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition214)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3242
@3242
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition215
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition215)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition216
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition216)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3242
@3242
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition217
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition217)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// call Image.push 17
@returnPosition218
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition218)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3242
@3242
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition219
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition219)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition220
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition220)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition221
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition221)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition222
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition222)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition223
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition223)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition224
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition224)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition225
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition225)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition226
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition226)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition227
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition227)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2731
@2731
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition228
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition228)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21855
@21855
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition229
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition229)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2731
@2731
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition230
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition230)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21855
@21855
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 23894
@23894
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition231
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition231)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10923
@10923
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition232
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition232)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 23894
@23894
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition233
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition233)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition234
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition234)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// call Image.push 17
@returnPosition235
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition235)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 32086
@32086
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition236
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition236)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition237
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition237)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition238
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition238)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition239
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition239)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition240
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition240)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition241
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition241)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4096
@4096
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition242
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition242)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4095
@4095
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4096
@4096
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition243
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition243)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 8191
@8191
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20480
@20480
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition244
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition244)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15022
@15022
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28672
@28672
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition245
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition245)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21853
@21853
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 30039
@30039
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20480
@20480
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition246
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition246)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16376
@16376
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5458
@5458
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition247
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition247)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28672
@28672
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21853
@21853
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32765
@32765
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10921
@10921
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition248
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition248)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20480
@20480
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15032
@15032
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21842
@21842
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition249
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition249)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28672
@28672
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21853
@21853
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 30045
@30045
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21847
@21847
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition250
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition250)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20480
@20480
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15032
@15032
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21842
@21842
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition251
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition251)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28672
@28672
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21853
@21853
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 30045
@30045
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21847
@21847
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 29
@29
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// call Image.push 17
@returnPosition252
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition252)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20480
@20480
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15032
@15032
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21842
@21842
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 58
@58
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition253
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition253)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28672
@28672
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21853
@21853
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 30045
@30045
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21847
@21847
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 117
@117
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition254
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition254)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20480
@20480
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15032
@15032
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21842
@21842
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 234
@234
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition255
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition255)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28672
@28672
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21853
@21853
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 30045
@30045
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21847
@21847
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition256
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition256)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20480
@20480
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15032
@15032
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21842
@21842
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition257
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition257)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28672
@28672
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21853
@21853
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 30045
@30045
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21847
@21847
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition258
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition258)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20480
@20480
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15032
@15032
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition259
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition259)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21842
@21842
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28672
@28672
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21853
@21853
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition260
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition260)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 30045
@30045
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21847
@21847
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20480
@20480
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition261
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition261)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16376
@16376
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21842
@21842
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28672
@28672
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition262
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition262)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21853
@21853
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32765
@32765
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21847
@21847
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20480
@20480
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition263
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition263)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21842
@21842
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition264
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition264)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28672
@28672
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21853
@21853
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21847
@21847
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition265
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition265)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20480
@20480
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21842
@21842
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition266
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition266)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28672
@28672
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21847
@21847
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition267
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition267)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20480
@20480
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21841
@21841
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition268
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition268)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28672
@28672
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// call Image.push 17
@returnPosition269
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition269)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20480
@20480
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition270
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition270)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28672
@28672
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition271
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition271)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20480
@20480
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition272
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition272)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28672
@28672
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition273
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition273)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20480
@20480
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition274
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition274)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28672
@28672
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition275
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition275)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20480
@20480
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition276
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition276)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28672
@28672
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition277
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition277)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20480
@20480
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition278
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition278)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28672
@28672
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition279
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition279)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20480
@20480
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition280
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition280)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition281
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition281)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28672
@28672
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition282
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition282)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20480
@20480
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition283
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition283)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28672
@28672
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition284
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition284)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20480
@20480
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition285
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition285)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28672
@28672
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// call Image.push 17
@returnPosition286
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition286)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20480
@20480
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition287
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition287)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28672
@28672
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition288
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition288)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20480
@20480
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition289
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition289)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28672
@28672
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition290
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition290)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 18432
@18432
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21842
@21842
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition291
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition291)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 31744
@31744
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 30037
@30037
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition292
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition292)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 18944
@18944
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 10922
@10922
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21830
@21830
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition293
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition293)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 29440
@29440
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8149
@8149
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 48
@48
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition294
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition294)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20032
@20032
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 2986
@2986
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 224
@224
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition295
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition295)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28896
@28896
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7125
@7125
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition296
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition296)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 880
@880
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20432
@20432
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition297
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition297)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7082
@7082
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 800
@800
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8192
@8192
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition298
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition298)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28720
@28720
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3541
@3541
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 880
@880
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition299
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition299)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20456
@20456
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 4010
@4010
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 800
@800
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8192
@8192
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition300
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition300)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28696
@28696
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8149
@8149
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 880
@880
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition301
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition301)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20472
@20472
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 16298
@16298
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 800
@800
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8192
@8192
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition302
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition302)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28684
@28684
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28629
@28629
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21360
@21360
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16708
@16708
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16708
@16708
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24581
@24581
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// call Image.push 17
@returnPosition303
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition303)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20466
@20466
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 14358
@14358
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 9023
@9023
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8738
@8738
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8704
@8704
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8190
@8190
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition304
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition304)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28686
@28686
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 31755
@31755
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21311
@21311
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 17412
@17412
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5476
@5476
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24580
@24580
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition305
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition305)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20478
@20478
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 250
@250
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8960
@8960
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8706
@8706
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8738
@8738
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8190
@8190
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition306
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition306)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28674
@28674
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 125
@125
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 17152
@17152
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16709
@16709
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16709
@16709
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24581
@24581
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition307
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition307)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20477
@20477
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 62
@62
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8192
@8192
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition308
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition308)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28675
@28675
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 31
@31
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24580
@24580
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition309
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition309)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 4095
@4095
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 128
@128
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition310
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition310)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8192
@8192
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8192
@8192
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 4048
@4048
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 112
@112
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition311
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition311)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12288
@12288
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1888
@1888
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 48
@48
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition312
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition312)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8192
@8192
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4096
@4096
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32704
@32704
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition313
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition313)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24
@24
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4177
@4177
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 17492
@17492
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6144
@6144
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16000
@16000
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition314
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition314)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8226
@8226
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 22014
@22014
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 8192
@8192
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3072
@3072
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition315
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition315)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7936
@7936
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4372
@4372
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21568
@21568
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition316
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition316)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3072
@3072
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 512
@512
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8232
@8232
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32254
@32254
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 8192
@8192
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition317
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition317)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3072
@3072
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 448
@448
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4373
@4373
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 17472
@17472
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition318
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition318)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1536
@1536
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 448
@448
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10784
@10784
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32214
@32214
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 8192
@8192
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition319
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition319)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 112
@112
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16384
@16384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16
@16
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 17408
@17408
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// call Image.push 17
@returnPosition320
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition320)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 40
@40
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32256
@32256
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 8192
@8192
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition321
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition321)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28
@28
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12288
@12288
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition322
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition322)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6144
@6144
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8192
@8192
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition323
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition323)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6144
@6144
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition324
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition324)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32384
@32384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6144
@6144
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 14816
@14816
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16881
@16881
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 497
@497
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 8069
@8069
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition325
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition325)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32384
@32384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6144
@6144
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4288
@4288
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7219
@7219
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9113
@9113
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 24593
@24593
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition326
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition326)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6144
@6144
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28800
@28800
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 2097
@2097
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 31198
@31198
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition327
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition327)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8177
@8177
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6144
@6144
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15168
@15168
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3127
@3127
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition328
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition328)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15501
@15501
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 24580
@24580
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6144
@6144
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 640
@640
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition329
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition329)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 29136
@29136
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 32343
@32343
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 8190
@8190
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6144
@6144
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition330
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition330)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32320
@32320
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 14800
@14800
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 15897
@15897
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 24577
@24577
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition331
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition331)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6144
@6144
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32640
@32640
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 32240
@32240
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 32541
@32541
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 8192
@8192
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition332
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition332)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6144
@6144
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32704
@32704
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 8225
@8225
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 16865
@16865
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition333
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition333)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6144
@6144
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8192
@8192
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 426
@426
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition334
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition334)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12288
@12288
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 469
@469
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition335
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition335)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4096
@4096
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 511
@511
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition336
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition336)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4096
@4096
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 511
@511
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// call Image.push 17
@returnPosition337
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition337)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8192
@8192
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 32765
@32765
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1551
@1551
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition338
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition338)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16379
@16379
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1543
@1543
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition339
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition339)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32762
@32762
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1539
@1539
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition340
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition340)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8161
@8161
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1537
@1537
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition341
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition341)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8192
@8192
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 8129
@8129
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1537
@1537
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition342
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition342)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4096
@4096
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3983
@3983
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1536
@1536
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition343
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition343)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12288
@12288
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 30816
@30816
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 512
@512
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition344
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition344)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12288
@12288
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 31936
@31936
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1536
@1536
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition345
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition345)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16
@16
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 16383
@16383
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12288
@12288
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8064
@8064
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition346
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition346)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20480
@20480
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition347
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition347)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8129
@8129
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 256
@256
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1996
@1996
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12409
@12409
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition348
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition348)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4209
@4209
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28698
@28698
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 24625
@24625
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition349
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition349)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8192
@8192
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 8176
@8176
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 387
@387
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24858
@24858
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 25137
@25137
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition350
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition350)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4095
@4095
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 196
@196
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8474
@8474
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 25121
@25121
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition351
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition351)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 384
@384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3840
@3840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 204
@204
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8474
@8474
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 32289
@32289
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition352
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition352)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 896
@896
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3840
@3840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 104
@104
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16154
@16154
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 30755
@30755
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition353
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition353)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2560
@2560
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 52
@52
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8474
@8474
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 28771
@28771
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// call Image.push 17
@returnPosition354
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition354)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3072
@3072
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 51
@51
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8474
@8474
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 24803
@24803
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition355
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition355)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3072
@3072
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 29
@29
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8474
@8474
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 25059
@25059
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition356
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition356)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2048
@2048
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8986
@8986
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 25121
@25121
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition357
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition357)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4096
@4096
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8986
@8986
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 25121
@25121
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition358
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition358)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8474
@8474
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 25123
@25123
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition359
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition359)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12288
@12288
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8250
@8250
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition360
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition360)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24611
@24611
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6144
@6144
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition361
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition361)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9274
@9274
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 28771
@28771
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3072
@3072
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16384
@16384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition362
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition362)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2044
@2044
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16384
@16384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition363
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition363)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1020
@1020
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition364
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition364)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8590
@8590
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15326
@15326
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition365
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition365)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28672
@28672
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8454
@8454
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32222
@32222
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition366
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition366)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12288
@12288
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8486
@8486
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 27870
@27870
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition367
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition367)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4096
@4096
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8486
@8486
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 27872
@27872
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition368
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition368)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6144
@6144
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10726
@10726
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7392
@7392
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition369
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition369)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6144
@6144
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10502
@10502
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 14816
@14816
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition370
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition370)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3584
@3584
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10534
@10534
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 29152
@29152
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// call Image.push 17
@returnPosition371
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition371)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1920
@1920
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8486
@8486
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28896
@28896
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition372
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition372)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 496
@496
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8486
@8486
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 27867
@27867
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition373
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition373)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 120
@120
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8486
@8486
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28123
@28123
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition374
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition374)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24
@24
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10502
@10502
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32219
@32219
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition375
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition375)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24
@24
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11596
@11596
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15323
@15323
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition376
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition376)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24
@24
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition377
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition377)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24
@24
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition378
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition378)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16
@16
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 16383
@16383
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24
@24
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition379
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition379)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24
@24
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition380
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition380)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition381
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition381)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24
@24
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition382
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition382)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24
@24
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition383
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition383)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24
@24
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition384
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition384)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24
@24
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition385
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition385)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 768
@768
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24
@24
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition386
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition386)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 256
@256
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 31
@31
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition387
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition387)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 256
@256
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 31
@31
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// call Image.push 17
@returnPosition388
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition388)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition389
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition389)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition390
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition390)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition391
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition391)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition392
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition392)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21887
@21887
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition393
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition393)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition394
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition394)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21885
@21885
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition395
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition395)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition396
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition396)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition397
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition397)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition398
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition398)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 682
@682
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition399
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition399)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21848
@21848
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition400
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition400)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 2730
@2730
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition401
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition401)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21848
@21848
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition402
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition402)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition403
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition403)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition404
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition404)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// call Image.push 17
@returnPosition405
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition405)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition406
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition406)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition407
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition407)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition408
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition408)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition409
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition409)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition410
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition410)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5461
@5461
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition411
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition411)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 10922
@10922
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21878
@21878
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition412
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition412)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition413
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition413)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 30038
@30038
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21886
@21886
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition414
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition414)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21981
@21981
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition415
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition415)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition416
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition416)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition417
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition417)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21840
@21840
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition418
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition418)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21877
@21877
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition419
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition419)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 23893
@23893
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21856
@21856
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition420
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition420)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 3754
@3754
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21989
@21989
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition421
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition421)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 22357
@22357
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// call Image.push 17
@returnPosition422
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition422)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 96
@96
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1023
@1023
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition423
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition423)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 107
@107
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition424
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition424)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 22015
@22015
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition425
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition425)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition426
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition426)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition427
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition427)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21844
@21844
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition428
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition428)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5461
@5461
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8192
@8192
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition429
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition429)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 31
@31
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8192
@8192
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition430
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition430)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 31
@31
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21782
@21782
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition431
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition431)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8192
@8192
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition432
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition432)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 31
@31
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21782
@21782
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition433
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition433)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8192
@8192
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition434
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition434)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 31
@31
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21782
@21782
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition435
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition435)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8192
@8192
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition436
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition436)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 31
@31
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21782
@21782
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition437
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition437)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8192
@8192
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition438
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition438)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 31
@31
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition439
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition439)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21782
@21782
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition440
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition440)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition441
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition441)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21
@21
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8192
@8192
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition442
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition442)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24576
@24576
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition443
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition443)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21
@21
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8192
@8192
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition444
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition444)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16384
@16384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition445
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition445)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// call Image.push 17
@returnPosition446
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition446)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 21846
@21846
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Image.push 17
@returnPosition447
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@22
D = A
@SP
D = M - D
@ARG
M = D
@Image.push
0 ; JMP
(returnPosition447)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Monitor.newImage
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Monitor.newImage
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Monitor.newImage
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Monitor.newImage
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Monitor.newImage
A = M - D
A = M
0 ; JMP

// === ChunkyImage ===

// function ChunkyImage.newBitmap 1
(ChunkyImage.newBitmap)
@SP
D = M
@LCL
M = D
@SP
A = M
M = 0
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Memory.alloc 1
@returnPosition448
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Memory.alloc
0 ; JMP
(returnPosition448)
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// call Dither4x4.init 0
@returnPosition449
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@5
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4.init
0 ; JMP
(returnPosition449)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4.getTable 1
@returnPosition450
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4.getTable
0 ; JMP
(returnPosition450)
// pop this 5
@5
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4.getTable 1
@returnPosition451
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4.getTable
0 ; JMP
(returnPosition451)
// pop this 6
@6
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4.getTable 1
@returnPosition452
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4.getTable
0 ; JMP
(returnPosition452)
// pop this 7
@7
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4.getTable 1
@returnPosition453
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4.getTable
0 ; JMP
(returnPosition453)
// pop this 8
@8
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 5
@5
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4.getOffset 0
@returnPosition454
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@5
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4.getOffset
0 ; JMP
(returnPosition454)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 9
@9
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 6
@6
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4.getOffset 0
@returnPosition455
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@5
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4.getOffset
0 ; JMP
(returnPosition455)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 10
@10
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4.getOffset 0
@returnPosition456
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@5
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4.getOffset
0 ; JMP
(returnPosition456)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 11
@11
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 8
@8
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4.getOffset 0
@returnPosition457
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@5
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4.getOffset
0 ; JMP
(returnPosition457)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 12
@12
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 0
@0
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 1
@1
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition458
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition458)
// pop this 2
@2
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 2
@2
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Array.new 1
@returnPosition459
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Array.new
0 ; JMP
(returnPosition459)
// pop this 3
@3
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// call Sinus.init 0
@returnPosition460
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@5
D = A
@SP
D = M - D
@ARG
M = D
@Sinus.init
0 ; JMP
(returnPosition460)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push pointer 0
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_ChunkyImage.newBitmap
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_ChunkyImage.newBitmap
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_ChunkyImage.newBitmap
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_ChunkyImage.newBitmap
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_ChunkyImage.newBitmap
A = M - D
A = M
0 ; JMP
// function ChunkyImage.dispose 0
(ChunkyImage.dispose)
@SP
D = M
@LCL
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Array.dispose 1
@returnPosition461
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Array.dispose
0 ; JMP
(returnPosition461)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push pointer 0
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Memory.dealloc 1
@returnPosition462
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Memory.dealloc
0 ; JMP
(returnPosition462)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_ChunkyImage.dispose
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_ChunkyImage.dispose
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_ChunkyImage.dispose
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_ChunkyImage.dispose
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_ChunkyImage.dispose
A = M - D
A = M
0 ; JMP
// function ChunkyImage.getBitmap 0
(ChunkyImage.getBitmap)
@SP
D = M
@LCL
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_ChunkyImage.getBitmap
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_ChunkyImage.getBitmap
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_ChunkyImage.getBitmap
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_ChunkyImage.getBitmap
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_ChunkyImage.getBitmap
A = M - D
A = M
0 ; JMP
// function ChunkyImage.getLength 0
(ChunkyImage.getLength)
@SP
D = M
@LCL
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push this 2
@2
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_ChunkyImage.getLength
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_ChunkyImage.getLength
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_ChunkyImage.getLength
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_ChunkyImage.getLength
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_ChunkyImage.getLength
A = M - D
A = M
0 ; JMP
// function ChunkyImage.getWidth 0
(ChunkyImage.getWidth)
@SP
D = M
@LCL
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push this 0
@0
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_ChunkyImage.getWidth
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_ChunkyImage.getWidth
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_ChunkyImage.getWidth
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_ChunkyImage.getWidth
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_ChunkyImage.getWidth
A = M - D
A = M
0 ; JMP
// function ChunkyImage.getHeight 0
(ChunkyImage.getHeight)
@SP
D = M
@LCL
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push this 1
@1
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_ChunkyImage.getHeight
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_ChunkyImage.getHeight
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_ChunkyImage.getHeight
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_ChunkyImage.getHeight
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_ChunkyImage.getHeight
A = M - D
A = M
0 ; JMP
// function ChunkyImage.push 1
(ChunkyImage.push)
@SP
D = M
@LCL
M = D
@SP
A = M
M = 0
@SP
M = M + 1
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push this 2
@2
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// eq
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true27
D ; JEQ
D = 0
@comp_end27
0 ; JMP
(comp_true27)
D = 1
(comp_end27)
@SP
A = M - 1
M = D
// if-goto IF_THEN1
@SP
AM = M - 1
D = M
@IF_THEN1
D ; JNE
// goto IF_END1
@IF_END1
0 ; JMP
// label IF_THEN1
(IF_THEN1)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_ChunkyImage.push
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_ChunkyImage.push
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_ChunkyImage.push
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_ChunkyImage.push
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_ChunkyImage.push
A = M - D
A = M
0 ; JMP
// label IF_END1
(IF_END1)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true28
D ; JGT
D = 0
@comp_end28
0 ; JMP
(comp_true28)
D = 1
(comp_end28)
@SP
A = M - 1
M = D
// if-goto IF_THEN2
@SP
AM = M - 1
D = M
@IF_THEN2
D ; JNE
// goto IF_ELSE2
@IF_ELSE2
0 ; JMP
// label IF_THEN2
(IF_THEN2)
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition463
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition463)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition464
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition464)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 3
@3
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition465
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition465)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 4
@4
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition466
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition466)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 5
@5
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition467
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition467)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 6
@6
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition468
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition468)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 7
@7
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition469
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition469)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 8
@8
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition470
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition470)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 9
@9
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition471
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition471)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 10
@10
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition472
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition472)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 11
@11
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition473
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition473)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 12
@12
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition474
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition474)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 13
@13
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition475
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition475)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 14
@14
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition476
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition476)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 15
@15
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition477
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition477)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 16
@16
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition478
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition478)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16
@16
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 4
@4
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto IF_END2
@IF_END2
0 ; JMP
// label IF_ELSE2
(IF_ELSE2)
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition479
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition479)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true29
D ; JGT
D = 0
@comp_end29
0 ; JMP
(comp_true29)
D = 1
(comp_end29)
@SP
A = M - 1
M = D
// if-goto IF_THEN3
@SP
AM = M - 1
D = M
@IF_THEN3
D ; JNE
// goto IF_END3
@IF_END3
0 ; JMP
// label IF_THEN3
(IF_THEN3)
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition480
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition480)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END3
(IF_END3)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true30
D ; JGT
D = 0
@comp_end30
0 ; JMP
(comp_true30)
D = 1
(comp_end30)
@SP
A = M - 1
M = D
// if-goto IF_THEN4
@SP
AM = M - 1
D = M
@IF_THEN4
D ; JNE
// goto IF_END4
@IF_END4
0 ; JMP
// label IF_THEN4
(IF_THEN4)
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 3
@3
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition481
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition481)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END4
(IF_END4)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true31
D ; JGT
D = 0
@comp_end31
0 ; JMP
(comp_true31)
D = 1
(comp_end31)
@SP
A = M - 1
M = D
// if-goto IF_THEN5
@SP
AM = M - 1
D = M
@IF_THEN5
D ; JNE
// goto IF_END5
@IF_END5
0 ; JMP
// label IF_THEN5
(IF_THEN5)
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 4
@4
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition482
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition482)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END5
(IF_END5)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true32
D ; JGT
D = 0
@comp_end32
0 ; JMP
(comp_true32)
D = 1
(comp_end32)
@SP
A = M - 1
M = D
// if-goto IF_THEN6
@SP
AM = M - 1
D = M
@IF_THEN6
D ; JNE
// goto IF_END6
@IF_END6
0 ; JMP
// label IF_THEN6
(IF_THEN6)
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 5
@5
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition483
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition483)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END6
(IF_END6)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true33
D ; JGT
D = 0
@comp_end33
0 ; JMP
(comp_true33)
D = 1
(comp_end33)
@SP
A = M - 1
M = D
// if-goto IF_THEN7
@SP
AM = M - 1
D = M
@IF_THEN7
D ; JNE
// goto IF_END7
@IF_END7
0 ; JMP
// label IF_THEN7
(IF_THEN7)
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 6
@6
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition484
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition484)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END7
(IF_END7)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true34
D ; JGT
D = 0
@comp_end34
0 ; JMP
(comp_true34)
D = 1
(comp_end34)
@SP
A = M - 1
M = D
// if-goto IF_THEN8
@SP
AM = M - 1
D = M
@IF_THEN8
D ; JNE
// goto IF_END8
@IF_END8
0 ; JMP
// label IF_THEN8
(IF_THEN8)
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 7
@7
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition485
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition485)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END8
(IF_END8)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true35
D ; JGT
D = 0
@comp_end35
0 ; JMP
(comp_true35)
D = 1
(comp_end35)
@SP
A = M - 1
M = D
// if-goto IF_THEN9
@SP
AM = M - 1
D = M
@IF_THEN9
D ; JNE
// goto IF_END9
@IF_END9
0 ; JMP
// label IF_THEN9
(IF_THEN9)
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 8
@8
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition486
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition486)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END9
(IF_END9)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true36
D ; JGT
D = 0
@comp_end36
0 ; JMP
(comp_true36)
D = 1
(comp_end36)
@SP
A = M - 1
M = D
// if-goto IF_THEN10
@SP
AM = M - 1
D = M
@IF_THEN10
D ; JNE
// goto IF_END10
@IF_END10
0 ; JMP
// label IF_THEN10
(IF_THEN10)
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 9
@9
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition487
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition487)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END10
(IF_END10)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true37
D ; JGT
D = 0
@comp_end37
0 ; JMP
(comp_true37)
D = 1
(comp_end37)
@SP
A = M - 1
M = D
// if-goto IF_THEN11
@SP
AM = M - 1
D = M
@IF_THEN11
D ; JNE
// goto IF_END11
@IF_END11
0 ; JMP
// label IF_THEN11
(IF_THEN11)
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 10
@10
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition488
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition488)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END11
(IF_END11)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true38
D ; JGT
D = 0
@comp_end38
0 ; JMP
(comp_true38)
D = 1
(comp_end38)
@SP
A = M - 1
M = D
// if-goto IF_THEN12
@SP
AM = M - 1
D = M
@IF_THEN12
D ; JNE
// goto IF_END12
@IF_END12
0 ; JMP
// label IF_THEN12
(IF_THEN12)
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 11
@11
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition489
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition489)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END12
(IF_END12)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true39
D ; JGT
D = 0
@comp_end39
0 ; JMP
(comp_true39)
D = 1
(comp_end39)
@SP
A = M - 1
M = D
// if-goto IF_THEN13
@SP
AM = M - 1
D = M
@IF_THEN13
D ; JNE
// goto IF_END13
@IF_END13
0 ; JMP
// label IF_THEN13
(IF_THEN13)
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 12
@12
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition490
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition490)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END13
(IF_END13)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true40
D ; JGT
D = 0
@comp_end40
0 ; JMP
(comp_true40)
D = 1
(comp_end40)
@SP
A = M - 1
M = D
// if-goto IF_THEN14
@SP
AM = M - 1
D = M
@IF_THEN14
D ; JNE
// goto IF_END14
@IF_END14
0 ; JMP
// label IF_THEN14
(IF_THEN14)
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 13
@13
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition491
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition491)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END14
(IF_END14)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true41
D ; JGT
D = 0
@comp_end41
0 ; JMP
(comp_true41)
D = 1
(comp_end41)
@SP
A = M - 1
M = D
// if-goto IF_THEN15
@SP
AM = M - 1
D = M
@IF_THEN15
D ; JNE
// goto IF_END15
@IF_END15
0 ; JMP
// label IF_THEN15
(IF_THEN15)
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 14
@14
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition492
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition492)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END15
(IF_END15)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true42
D ; JGT
D = 0
@comp_end42
0 ; JMP
(comp_true42)
D = 1
(comp_end42)
@SP
A = M - 1
M = D
// if-goto IF_THEN16
@SP
AM = M - 1
D = M
@IF_THEN16
D ; JNE
// goto IF_END16
@IF_END16
0 ; JMP
// label IF_THEN16
(IF_THEN16)
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 15
@15
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition493
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition493)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END16
(IF_END16)
// push this 2
@2
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 4
@4
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END2
(IF_END2)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_ChunkyImage.push
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_ChunkyImage.push
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_ChunkyImage.push
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_ChunkyImage.push
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_ChunkyImage.push
A = M - D
A = M
0 ; JMP
// function ChunkyImage.setShadeOffset 0
(ChunkyImage.setShadeOffset)
@SP
D = M
@LCL
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true43
D ; JLT
D = 0
@comp_end43
0 ; JMP
(comp_true43)
D = 1
(comp_end43)
@SP
A = M - 1
M = D
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true44
D ; JGT
D = 0
@comp_end44
0 ; JMP
(comp_true44)
D = 1
(comp_end44)
@SP
A = M - 1
M = D
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// if-goto IF_THEN17
@SP
AM = M - 1
D = M
@IF_THEN17
D ; JNE
// goto IF_END17
@IF_END17
0 ; JMP
// label IF_THEN17
(IF_THEN17)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_ChunkyImage.setShadeOffset
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_ChunkyImage.setShadeOffset
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_ChunkyImage.setShadeOffset
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_ChunkyImage.setShadeOffset
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_ChunkyImage.setShadeOffset
A = M - D
A = M
0 ; JMP
// label IF_END17
(IF_END17)
// push this 5
@5
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition494
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition494)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 9
@9
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 6
@6
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition495
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition495)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 10
@10
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition496
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition496)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 11
@11
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 8
@8
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition497
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition497)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 12
@12
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_ChunkyImage.setShadeOffset
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_ChunkyImage.setShadeOffset
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_ChunkyImage.setShadeOffset
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_ChunkyImage.setShadeOffset
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_ChunkyImage.setShadeOffset
A = M - D
A = M
0 ; JMP
// function ChunkyImage.draw 9
(ChunkyImage.draw)
@SP
D = M
@LCL
M = D
@SP
D = M
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
@9
D = A
@SP
M = M + D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push constant 16384
@16384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition498
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition498)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 6
@6
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 8
@8
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND1
(WHILE_COND1)
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 1
@1
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true45
D ; JLT
D = 0
@comp_end45
0 ; JMP
(comp_true45)
D = 1
(comp_end45)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY1
@SP
AM = M - 1
D = M
@WHILE_BODY1
D ; JNE
// goto WHILE_END1
@WHILE_END1
0 ; JMP
// label WHILE_BODY1
(WHILE_BODY1)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 7
@7
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND2
(WHILE_COND2)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 0
@0
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true46
D ; JLT
D = 0
@comp_end46
0 ; JMP
(comp_true46)
D = 1
(comp_end46)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY2
@SP
AM = M - 1
D = M
@WHILE_BODY2
D ; JNE
// goto WHILE_END2
@WHILE_END2
0 ; JMP
// label WHILE_BODY2
(WHILE_BODY2)
// push local 8
@8
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 8
@8
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 8
@8
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 8
@8
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 5
@5
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 9
@9
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 10
@10
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 11
@11
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 12
@12
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 9
@9
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 10
@10
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 11
@11
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 12
@12
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 64
@64
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 9
@9
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 10
@10
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 11
@11
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 12
@12
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 96
@96
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 9
@9
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 10
@10
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 11
@11
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 12
@12
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 7
@7
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND2
@WHILE_COND2
0 ; JMP
// label WHILE_END2
(WHILE_END2)
// push local 8
@8
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 0
@0
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 8
@8
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 128
@128
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 6
@6
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 1
@1
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND1
@WHILE_COND1
0 ; JMP
// label WHILE_END1
(WHILE_END1)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_ChunkyImage.draw
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_ChunkyImage.draw
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_ChunkyImage.draw
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_ChunkyImage.draw
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_ChunkyImage.draw
A = M - D
A = M
0 ; JMP
// function ChunkyImage.drawOffset 14
(ChunkyImage.drawOffset)
@SP
D = M
@LCL
M = D
@SP
D = M
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
@14
D = A
@SP
M = M + D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push constant 16384
@16384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 3
@3
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition499
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition499)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 11
@11
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 13
@13
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 0
@0
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND3
(WHILE_COND3)
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 1
@1
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true47
D ; JLT
D = 0
@comp_end47
0 ; JMP
(comp_true47)
D = 1
(comp_end47)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY3
@SP
AM = M - 1
D = M
@WHILE_BODY3
D ; JNE
// goto WHILE_END3
@WHILE_END3
0 ; JMP
// label WHILE_BODY3
(WHILE_BODY3)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 11
@11
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 12
@12
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true48
D ; JGT
D = 0
@comp_end48
0 ; JMP
(comp_true48)
D = 1
(comp_end48)
@SP
A = M - 1
M = D
// if-goto IF_THEN18
@SP
AM = M - 1
D = M
@IF_THEN18
D ; JNE
// goto IF_END18
@IF_END18
0 ; JMP
// label IF_THEN18
(IF_THEN18)
// push constant 64
@64
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 13
@13
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 13
@13
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 5
@5
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 13
@13
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 6
@6
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true49
D ; JGT
D = 0
@comp_end49
0 ; JMP
(comp_true49)
D = 1
(comp_end49)
@SP
A = M - 1
M = D
// if-goto IF_THEN19
@SP
AM = M - 1
D = M
@IF_THEN19
D ; JNE
// goto IF_END19
@IF_END19
0 ; JMP
// label IF_THEN19
(IF_THEN19)
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 6
@6
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 5
@5
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 64
@64
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true50
D ; JGT
D = 0
@comp_end50
0 ; JMP
(comp_true50)
D = 1
(comp_end50)
@SP
A = M - 1
M = D
// if-goto IF_THEN20
@SP
AM = M - 1
D = M
@IF_THEN20
D ; JNE
// goto IF_END20
@IF_END20
0 ; JMP
// label IF_THEN20
(IF_THEN20)
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 6
@6
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 64
@64
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 5
@5
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END20
(IF_END20)
// label IF_END19
(IF_END19)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 12
@12
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 9
@9
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 10
@10
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 11
@11
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 12
@12
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 12
@12
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 9
@9
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 10
@10
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 11
@11
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 12
@12
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 64
@64
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 12
@12
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 9
@9
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 10
@10
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 11
@11
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 12
@12
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 96
@96
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 12
@12
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 9
@9
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 10
@10
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 11
@11
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 12
@12
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 12
@12
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 12
@12
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END18
(IF_END18)
// label WHILE_COND4
(WHILE_COND4)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true51
D ; JLT
D = 0
@comp_end51
0 ; JMP
(comp_true51)
D = 1
(comp_end51)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY4
@SP
AM = M - 1
D = M
@WHILE_BODY4
D ; JNE
// goto WHILE_END4
@WHILE_END4
0 ; JMP
// label WHILE_BODY4
(WHILE_BODY4)
// push local 13
@13
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 13
@13
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 13
@13
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 5
@5
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 13
@13
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 6
@6
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 12
@12
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 9
@9
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 10
@10
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 11
@11
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 12
@12
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 12
@12
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 9
@9
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 10
@10
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 11
@11
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 12
@12
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 64
@64
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 12
@12
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 9
@9
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 10
@10
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 11
@11
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 12
@12
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 96
@96
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 12
@12
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 9
@9
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 10
@10
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 11
@11
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 12
@12
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 12
@12
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 12
@12
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND4
@WHILE_COND4
0 ; JMP
// label WHILE_END4
(WHILE_END4)
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true52
D ; JGT
D = 0
@comp_end52
0 ; JMP
(comp_true52)
D = 1
(comp_end52)
@SP
A = M - 1
M = D
// if-goto IF_THEN21
@SP
AM = M - 1
D = M
@IF_THEN21
D ; JNE
// goto IF_END21
@IF_END21
0 ; JMP
// label IF_THEN21
(IF_THEN21)
// push constant 64
@64
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 6
@6
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 64
@64
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 5
@5
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 64
@64
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 13
@13
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true53
D ; JGT
D = 0
@comp_end53
0 ; JMP
(comp_true53)
D = 1
(comp_end53)
@SP
A = M - 1
M = D
// if-goto IF_THEN22
@SP
AM = M - 1
D = M
@IF_THEN22
D ; JNE
// goto IF_END22
@IF_END22
0 ; JMP
// label IF_THEN22
(IF_THEN22)
// push local 13
@13
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true54
D ; JGT
D = 0
@comp_end54
0 ; JMP
(comp_true54)
D = 1
(comp_end54)
@SP
A = M - 1
M = D
// if-goto IF_THEN23
@SP
AM = M - 1
D = M
@IF_THEN23
D ; JNE
// goto IF_END23
@IF_END23
0 ; JMP
// label IF_THEN23
(IF_THEN23)
// push local 13
@13
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 5
@5
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END23
(IF_END23)
// label IF_END22
(IF_END22)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 12
@12
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 9
@9
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 10
@10
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 11
@11
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 12
@12
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 12
@12
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 9
@9
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 10
@10
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 11
@11
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 12
@12
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 64
@64
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 12
@12
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 9
@9
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 10
@10
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 11
@11
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 12
@12
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 96
@96
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 12
@12
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 9
@9
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 10
@10
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 11
@11
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 12
@12
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END21
(IF_END21)
// push local 13
@13
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 0
@0
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 13
@13
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 11
@11
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 128
@128
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 11
@11
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 1
@1
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND3
@WHILE_COND3
0 ; JMP
// label WHILE_END3
(WHILE_END3)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_ChunkyImage.drawOffset
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_ChunkyImage.drawOffset
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_ChunkyImage.drawOffset
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_ChunkyImage.drawOffset
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_ChunkyImage.drawOffset
A = M - D
A = M
0 ; JMP
// function ChunkyImage.drawTile 14
(ChunkyImage.drawTile)
@SP
D = M
@LCL
M = D
@SP
D = M
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
@14
D = A
@SP
M = M + D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push constant 16384
@16384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition500
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition500)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 0
@0
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop local 6
@6
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 1
@1
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop local 7
@7
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 5
@5
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 6
@6
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 5
@5
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 1
@1
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND5
(WHILE_COND5)
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 4
@4
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true55
D ; JLT
D = 0
@comp_end55
0 ; JMP
(comp_true55)
D = 1
(comp_end55)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY5
@SP
AM = M - 1
D = M
@WHILE_BODY5
D ; JNE
// goto WHILE_END5
@WHILE_END5
0 ; JMP
// label WHILE_BODY5
(WHILE_BODY5)
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 5
@5
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// push this 0
@0
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition501
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition501)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 13
@13
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND6
(WHILE_COND6)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 3
@3
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true56
D ; JLT
D = 0
@comp_end56
0 ; JMP
(comp_true56)
D = 1
(comp_end56)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY6
@SP
AM = M - 1
D = M
@WHILE_BODY6
D ; JNE
// goto WHILE_END6
@WHILE_END6
0 ; JMP
// label WHILE_BODY6
(WHILE_BODY6)
// push local 13
@13
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 8
@8
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 13
@13
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 9
@9
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 13
@13
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 10
@10
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 13
@13
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 11
@11
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 9
@9
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 8
@8
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 10
@10
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 9
@9
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 11
@11
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 10
@10
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 12
@12
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 11
@11
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 9
@9
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 8
@8
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 10
@10
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 9
@9
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 11
@11
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 10
@10
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 12
@12
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 11
@11
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 64
@64
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 9
@9
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 8
@8
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 10
@10
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 9
@9
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 11
@11
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 10
@10
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 12
@12
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 11
@11
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 96
@96
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 9
@9
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 8
@8
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 10
@10
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 9
@9
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 11
@11
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 10
@10
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 12
@12
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 11
@11
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND6
@WHILE_COND6
0 ; JMP
// label WHILE_END6
(WHILE_END6)
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 5
@5
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 128
@128
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 1
@1
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND5
@WHILE_COND5
0 ; JMP
// label WHILE_END5
(WHILE_END5)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_ChunkyImage.drawTile
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_ChunkyImage.drawTile
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_ChunkyImage.drawTile
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_ChunkyImage.drawTile
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_ChunkyImage.drawTile
A = M - D
A = M
0 ; JMP

// === Main ===

// function Main.main 1
(Main.main)
@SP
D = M
@LCL
M = D
@SP
A = M
M = 0
@SP
M = M + 1
// call GASchunky.new 0
@returnPosition502
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@5
D = A
@SP
D = M - D
@ARG
M = D
@GASchunky.new
0 ; JMP
(returnPosition502)
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call GASchunky.run 1
@returnPosition503
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@GASchunky.run
0 ; JMP
(returnPosition503)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call GASchunky.dispose 1
@returnPosition504
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@GASchunky.dispose
0 ; JMP
(returnPosition504)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Main.main
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Main.main
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Main.main
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Main.main
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Main.main
A = M - D
A = M
0 ; JMP

// === Dither4x4 ===

// function Dither4x4.init 1
(Dither4x4.init)
@SP
D = M
@LCL
M = D
@SP
A = M
M = 0
@SP
M = M + 1
// push static 6
@Dither4x4.6
D = M
@SP
A = M
M = D
@SP
M = M + 1
// if-goto IF_THEN1
@SP
AM = M - 1
D = M
@IF_THEN1
D ; JNE
// goto IF_END1
@IF_END1
0 ; JMP
// label IF_THEN1
(IF_THEN1)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Dither4x4.init
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Dither4x4.init
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Dither4x4.init
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Dither4x4.init
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Dither4x4.init
A = M - D
A = M
0 ; JMP
// label IF_END1
(IF_END1)
// push constant 16
@16
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition505
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition505)
// pop static 5
@SP
AM = M - 1
D = M
@Dither4x4.5
M = D
// push constant 16
@16
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition506
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition506)
// push constant 17
@17
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition507
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition507)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push constant 16
@16
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition508
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition508)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop static 4
@SP
AM = M - 1
D = M
@Dither4x4.4
M = D
// push static 4
@Dither4x4.4
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Array.new 1
@returnPosition509
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Array.new
0 ; JMP
(returnPosition509)
// pop static 0
@SP
AM = M - 1
D = M
@Dither4x4.0
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND1
(WHILE_COND1)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push static 5
@Dither4x4.5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true57
D ; JLT
D = 0
@comp_end57
0 ; JMP
(comp_true57)
D = 1
(comp_end57)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY1
@SP
AM = M - 1
D = M
@WHILE_BODY1
D ; JNE
// goto WHILE_END1
@WHILE_END1
0 ; JMP
// label WHILE_BODY1
(WHILE_BODY1)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push static 0
@Dither4x4.0
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND1
@WHILE_COND1
0 ; JMP
// label WHILE_END1
(WHILE_END1)
// push constant 16
@16
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4._setShade 5
@returnPosition510
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@10
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4._setShade
0 ; JMP
(returnPosition510)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4._setShade 5
@returnPosition511
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@10
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4._setShade
0 ; JMP
(returnPosition511)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4._setShade 5
@returnPosition512
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@10
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4._setShade
0 ; JMP
(returnPosition512)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4._setShade 5
@returnPosition513
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@10
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4._setShade
0 ; JMP
(returnPosition513)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4._setShade 5
@returnPosition514
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@10
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4._setShade
0 ; JMP
(returnPosition514)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4._setShade 5
@returnPosition515
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@10
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4._setShade
0 ; JMP
(returnPosition515)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4._setShade 5
@returnPosition516
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@10
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4._setShade
0 ; JMP
(returnPosition516)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4._setShade 5
@returnPosition517
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@10
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4._setShade
0 ; JMP
(returnPosition517)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4._setShade 5
@returnPosition518
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@10
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4._setShade
0 ; JMP
(returnPosition518)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4._setShade 5
@returnPosition519
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@10
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4._setShade
0 ; JMP
(returnPosition519)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4._setShade 5
@returnPosition520
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@10
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4._setShade
0 ; JMP
(returnPosition520)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4._setShade 5
@returnPosition521
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@10
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4._setShade
0 ; JMP
(returnPosition521)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4._setShade 5
@returnPosition522
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@10
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4._setShade
0 ; JMP
(returnPosition522)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4._setShade 5
@returnPosition523
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@10
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4._setShade
0 ; JMP
(returnPosition523)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4._setShade 5
@returnPosition524
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@10
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4._setShade
0 ; JMP
(returnPosition524)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4._setShade 5
@returnPosition525
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@10
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4._setShade
0 ; JMP
(returnPosition525)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4._setShade 5
@returnPosition526
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@10
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4._setShade
0 ; JMP
(returnPosition526)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 16
@16
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4._getNewShiftedTable 1
@returnPosition527
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4._getNewShiftedTable
0 ; JMP
(returnPosition527)
// pop static 1
@SP
AM = M - 1
D = M
@Dither4x4.1
M = D
// push constant 256
@256
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4._getNewShiftedTable 1
@returnPosition528
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4._getNewShiftedTable
0 ; JMP
(returnPosition528)
// pop static 2
@SP
AM = M - 1
D = M
@Dither4x4.2
M = D
// push constant 4096
@4096
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4._getNewShiftedTable 1
@returnPosition529
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4._getNewShiftedTable
0 ; JMP
(returnPosition529)
// pop static 3
@SP
AM = M - 1
D = M
@Dither4x4.3
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// not
@SP
A = M - 1
M = ! M
// pop static 6
@SP
AM = M - 1
D = M
@Dither4x4.6
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Dither4x4.init
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Dither4x4.init
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Dither4x4.init
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Dither4x4.init
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Dither4x4.init
A = M - D
A = M
0 ; JMP
// function Dither4x4.dispose 0
(Dither4x4.dispose)
@SP
D = M
@LCL
M = D
// push static 6
@Dither4x4.6
D = M
@SP
A = M
M = D
@SP
M = M + 1
// if-goto IF_THEN2
@SP
AM = M - 1
D = M
@IF_THEN2
D ; JNE
// goto IF_END2
@IF_END2
0 ; JMP
// label IF_THEN2
(IF_THEN2)
// push static 0
@Dither4x4.0
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Array.dispose 1
@returnPosition530
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Array.dispose
0 ; JMP
(returnPosition530)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push static 1
@Dither4x4.1
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Array.dispose 1
@returnPosition531
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Array.dispose
0 ; JMP
(returnPosition531)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push static 2
@Dither4x4.2
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Array.dispose 1
@returnPosition532
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Array.dispose
0 ; JMP
(returnPosition532)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push static 3
@Dither4x4.3
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Array.dispose 1
@returnPosition533
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Array.dispose
0 ; JMP
(returnPosition533)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END2
(IF_END2)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Dither4x4.dispose
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Dither4x4.dispose
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Dither4x4.dispose
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Dither4x4.dispose
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Dither4x4.dispose
A = M - D
A = M
0 ; JMP
// function Dither4x4.getTable 0
(Dither4x4.getTable)
@SP
D = M
@LCL
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// eq
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true58
D ; JEQ
D = 0
@comp_end58
0 ; JMP
(comp_true58)
D = 1
(comp_end58)
@SP
A = M - 1
M = D
// if-goto IF_THEN3
@SP
AM = M - 1
D = M
@IF_THEN3
D ; JNE
// goto IF_END3
@IF_END3
0 ; JMP
// label IF_THEN3
(IF_THEN3)
// push static 0
@Dither4x4.0
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Dither4x4.getTable
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Dither4x4.getTable
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Dither4x4.getTable
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Dither4x4.getTable
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Dither4x4.getTable
A = M - D
A = M
0 ; JMP
// label IF_END3
(IF_END3)
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// eq
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true59
D ; JEQ
D = 0
@comp_end59
0 ; JMP
(comp_true59)
D = 1
(comp_end59)
@SP
A = M - 1
M = D
// if-goto IF_THEN4
@SP
AM = M - 1
D = M
@IF_THEN4
D ; JNE
// goto IF_END4
@IF_END4
0 ; JMP
// label IF_THEN4
(IF_THEN4)
// push static 1
@Dither4x4.1
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Dither4x4.getTable
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Dither4x4.getTable
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Dither4x4.getTable
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Dither4x4.getTable
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Dither4x4.getTable
A = M - D
A = M
0 ; JMP
// label IF_END4
(IF_END4)
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// eq
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true60
D ; JEQ
D = 0
@comp_end60
0 ; JMP
(comp_true60)
D = 1
(comp_end60)
@SP
A = M - 1
M = D
// if-goto IF_THEN5
@SP
AM = M - 1
D = M
@IF_THEN5
D ; JNE
// goto IF_END5
@IF_END5
0 ; JMP
// label IF_THEN5
(IF_THEN5)
// push static 2
@Dither4x4.2
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Dither4x4.getTable
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Dither4x4.getTable
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Dither4x4.getTable
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Dither4x4.getTable
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Dither4x4.getTable
A = M - D
A = M
0 ; JMP
// label IF_END5
(IF_END5)
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// eq
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true61
D ; JEQ
D = 0
@comp_end61
0 ; JMP
(comp_true61)
D = 1
(comp_end61)
@SP
A = M - 1
M = D
// if-goto IF_THEN6
@SP
AM = M - 1
D = M
@IF_THEN6
D ; JNE
// goto IF_END6
@IF_END6
0 ; JMP
// label IF_THEN6
(IF_THEN6)
// push static 3
@Dither4x4.3
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Dither4x4.getTable
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Dither4x4.getTable
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Dither4x4.getTable
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Dither4x4.getTable
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Dither4x4.getTable
A = M - D
A = M
0 ; JMP
// label IF_END6
(IF_END6)
// push static 0
@Dither4x4.0
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Dither4x4.getTable
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Dither4x4.getTable
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Dither4x4.getTable
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Dither4x4.getTable
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Dither4x4.getTable
A = M - D
A = M
0 ; JMP
// function Dither4x4.getLength 0
(Dither4x4.getLength)
@SP
D = M
@LCL
M = D
// push static 4
@Dither4x4.4
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Dither4x4.getLength
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Dither4x4.getLength
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Dither4x4.getLength
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Dither4x4.getLength
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Dither4x4.getLength
A = M - D
A = M
0 ; JMP
// function Dither4x4.getOffset 0
(Dither4x4.getOffset)
@SP
D = M
@LCL
M = D
// push static 5
@Dither4x4.5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Dither4x4.getOffset
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Dither4x4.getOffset
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Dither4x4.getOffset
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Dither4x4.getOffset
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Dither4x4.getOffset
A = M - D
A = M
0 ; JMP
// function Dither4x4._setShade 1
(Dither4x4._setShade)
@SP
D = M
@LCL
M = D
@SP
A = M
M = 0
@SP
M = M + 1
// push static 5
@Dither4x4.5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition534
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition534)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push static 0
@Dither4x4.0
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push static 0
@Dither4x4.0
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push static 0
@Dither4x4.0
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 3
@3
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push static 0
@Dither4x4.0
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 4
@4
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Dither4x4._setShade
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Dither4x4._setShade
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Dither4x4._setShade
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Dither4x4._setShade
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Dither4x4._setShade
A = M - D
A = M
0 ; JMP
// function Dither4x4._getNewShiftedTable 3
(Dither4x4._getNewShiftedTable)
@SP
D = M
@LCL
M = D
@SP
D = M
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
@3
D = A
@SP
M = M + D
// push static 4
@Dither4x4.4
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 1
@1
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Array.new 1
@returnPosition535
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Array.new
0 ; JMP
(returnPosition535)
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND2
(WHILE_COND2)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true62
D ; JLT
D = 0
@comp_end62
0 ; JMP
(comp_true62)
D = 1
(comp_end62)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY2
@SP
AM = M - 1
D = M
@WHILE_BODY2
D ; JNE
// goto WHILE_END2
@WHILE_END2
0 ; JMP
// label WHILE_BODY2
(WHILE_BODY2)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push static 0
@Dither4x4.0
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition536
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition536)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND2
@WHILE_COND2
0 ; JMP
// label WHILE_END2
(WHILE_END2)
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Dither4x4._getNewShiftedTable
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Dither4x4._getNewShiftedTable
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Dither4x4._getNewShiftedTable
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Dither4x4._getNewShiftedTable
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Dither4x4._getNewShiftedTable
A = M - D
A = M
0 ; JMP

// === Image ===

// function Image.newBitmap 0
(Image.newBitmap)
@SP
D = M
@LCL
M = D
// push constant 16
@16
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Memory.alloc 1
@returnPosition537
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Memory.alloc
0 ; JMP
(returnPosition537)
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 0
@0
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 1
@1
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition538
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition538)
// pop this 2
@2
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 2
@2
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Array.new 1
@returnPosition539
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Array.new
0 ; JMP
(returnPosition539)
// pop this 3
@3
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop this 10
@10
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push pointer 0
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Image.newBitmap
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Image.newBitmap
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Image.newBitmap
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Image.newBitmap
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Image.newBitmap
A = M - D
A = M
0 ; JMP
// function Image.newDelta 0
(Image.newDelta)
@SP
D = M
@LCL
M = D
// push constant 16
@16
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Memory.alloc 1
@returnPosition540
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Memory.alloc
0 ; JMP
(returnPosition540)
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 8
@8
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 9
@9
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 3
@3
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 0
@0
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 4
@4
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 1
@1
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 2
@2
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 2
@2
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Array.new 1
@returnPosition541
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Array.new
0 ; JMP
(returnPosition541)
// pop this 3
@3
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop this 10
@10
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push pointer 0
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Image.newDelta
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Image.newDelta
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Image.newDelta
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Image.newDelta
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Image.newDelta
A = M - D
A = M
0 ; JMP
// function Image.newRender 0
(Image.newRender)
@SP
D = M
@LCL
M = D
// push constant 16
@16
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Memory.alloc 1
@returnPosition542
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Memory.alloc
0 ; JMP
(returnPosition542)
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// not
@SP
A = M - 1
M = ! M
// pop this 10
@10
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push pointer 0
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Image.resetRender 3
@returnPosition543
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@8
D = A
@SP
D = M - D
@ARG
M = D
@Image.resetRender
0 ; JMP
(returnPosition543)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 0
@0
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 3
@3
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 1
@1
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 16
@16
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop this 2
@2
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 2
@2
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Array.new 1
@returnPosition544
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Array.new
0 ; JMP
(returnPosition544)
// pop this 3
@3
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push pointer 0
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Image.newRender
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Image.newRender
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Image.newRender
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Image.newRender
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Image.newRender
A = M - D
A = M
0 ; JMP
// function Image.newCompressed 0
(Image.newCompressed)
@SP
D = M
@LCL
M = D
// push constant 16
@16
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Memory.alloc 1
@returnPosition545
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Memory.alloc
0 ; JMP
(returnPosition545)
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 0
@0
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 1
@1
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition546
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition546)
// pop this 2
@2
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 2
@2
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Array.new 1
@returnPosition547
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Array.new
0 ; JMP
(returnPosition547)
// pop this 3
@3
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 5
@5
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Array.new 1
@returnPosition548
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Array.new
0 ; JMP
(returnPosition548)
// pop this 6
@6
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop this 10
@10
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push pointer 0
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Image.newCompressed
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Image.newCompressed
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Image.newCompressed
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Image.newCompressed
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Image.newCompressed
A = M - D
A = M
0 ; JMP
// function Image.dispose 0
(Image.dispose)
@SP
D = M
@LCL
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push pointer 0
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Image.disposeCompressed 1
@returnPosition549
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Image.disposeCompressed
0 ; JMP
(returnPosition549)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Array.dispose 1
@returnPosition550
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Array.dispose
0 ; JMP
(returnPosition550)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Image.dispose
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Image.dispose
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Image.dispose
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Image.dispose
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Image.dispose
A = M - D
A = M
0 ; JMP
// function Image.disposeCompressed 0
(Image.disposeCompressed)
@SP
D = M
@LCL
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push this 5
@5
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true63
D ; JGT
D = 0
@comp_end63
0 ; JMP
(comp_true63)
D = 1
(comp_end63)
@SP
A = M - 1
M = D
// if-goto IF_THEN1
@SP
AM = M - 1
D = M
@IF_THEN1
D ; JNE
// goto IF_END1
@IF_END1
0 ; JMP
// label IF_THEN1
(IF_THEN1)
// push this 6
@6
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Array.dispose 1
@returnPosition551
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Array.dispose
0 ; JMP
(returnPosition551)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END1
(IF_END1)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop this 5
@5
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Image.disposeCompressed
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Image.disposeCompressed
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Image.disposeCompressed
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Image.disposeCompressed
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Image.disposeCompressed
A = M - D
A = M
0 ; JMP
// function Image.getBitmap 0
(Image.getBitmap)
@SP
D = M
@LCL
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Image.getBitmap
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Image.getBitmap
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Image.getBitmap
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Image.getBitmap
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Image.getBitmap
A = M - D
A = M
0 ; JMP
// function Image.getLength 0
(Image.getLength)
@SP
D = M
@LCL
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push this 2
@2
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Image.getLength
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Image.getLength
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Image.getLength
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Image.getLength
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Image.getLength
A = M - D
A = M
0 ; JMP
// function Image.getWidth 0
(Image.getWidth)
@SP
D = M
@LCL
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push this 0
@0
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Image.getWidth
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Image.getWidth
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Image.getWidth
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Image.getWidth
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Image.getWidth
A = M - D
A = M
0 ; JMP
// function Image.getHeight 0
(Image.getHeight)
@SP
D = M
@LCL
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push this 1
@1
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Image.getHeight
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Image.getHeight
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Image.getHeight
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Image.getHeight
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Image.getHeight
A = M - D
A = M
0 ; JMP
// function Image.getData 0
(Image.getData)
@SP
D = M
@LCL
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push this 6
@6
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Image.getData
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Image.getData
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Image.getData
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Image.getData
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Image.getData
A = M - D
A = M
0 ; JMP
// function Image.getDataLength 0
(Image.getDataLength)
@SP
D = M
@LCL
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push this 5
@5
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Image.getDataLength
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Image.getDataLength
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Image.getDataLength
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Image.getDataLength
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Image.getDataLength
A = M - D
A = M
0 ; JMP
// function Image.isRender 0
(Image.isRender)
@SP
D = M
@LCL
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push this 10
@10
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Image.isRender
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Image.isRender
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Image.isRender
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Image.isRender
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Image.isRender
A = M - D
A = M
0 ; JMP
// function Image.resetRender 0
(Image.resetRender)
@SP
D = M
@LCL
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 11
@11
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 12
@12
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop this 13
@13
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop this 14
@14
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 16384
@16384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push this 11
@11
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 12
@12
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition552
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition552)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 15
@15
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Image.resetRender
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Image.resetRender
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Image.resetRender
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Image.resetRender
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Image.resetRender
A = M - D
A = M
0 ; JMP
// function Image.push 1
(Image.push)
@SP
D = M
@LCL
M = D
@SP
A = M
M = 0
@SP
M = M + 1
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push this 2
@2
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// eq
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true64
D ; JEQ
D = 0
@comp_end64
0 ; JMP
(comp_true64)
D = 1
(comp_end64)
@SP
A = M - 1
M = D
// if-goto IF_THEN2
@SP
AM = M - 1
D = M
@IF_THEN2
D ; JNE
// goto IF_END2
@IF_END2
0 ; JMP
// label IF_THEN2
(IF_THEN2)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Image.push
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Image.push
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Image.push
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Image.push
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Image.push
A = M - D
A = M
0 ; JMP
// label IF_END2
(IF_END2)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true65
D ; JGT
D = 0
@comp_end65
0 ; JMP
(comp_true65)
D = 1
(comp_end65)
@SP
A = M - 1
M = D
// if-goto IF_THEN3
@SP
AM = M - 1
D = M
@IF_THEN3
D ; JNE
// goto IF_ELSE3
@IF_ELSE3
0 ; JMP
// label IF_THEN3
(IF_THEN3)
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 3
@3
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 4
@4
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 5
@5
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 6
@6
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 7
@7
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 8
@8
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 9
@9
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 10
@10
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 11
@11
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 12
@12
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 13
@13
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 14
@14
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 15
@15
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 16
@16
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16
@16
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 7
@7
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto IF_END3
@IF_END3
0 ; JMP
// label IF_ELSE3
(IF_ELSE3)
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true66
D ; JGT
D = 0
@comp_end66
0 ; JMP
(comp_true66)
D = 1
(comp_end66)
@SP
A = M - 1
M = D
// if-goto IF_THEN4
@SP
AM = M - 1
D = M
@IF_THEN4
D ; JNE
// goto IF_END4
@IF_END4
0 ; JMP
// label IF_THEN4
(IF_THEN4)
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END4
(IF_END4)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true67
D ; JGT
D = 0
@comp_end67
0 ; JMP
(comp_true67)
D = 1
(comp_end67)
@SP
A = M - 1
M = D
// if-goto IF_THEN5
@SP
AM = M - 1
D = M
@IF_THEN5
D ; JNE
// goto IF_END5
@IF_END5
0 ; JMP
// label IF_THEN5
(IF_THEN5)
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 3
@3
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END5
(IF_END5)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true68
D ; JGT
D = 0
@comp_end68
0 ; JMP
(comp_true68)
D = 1
(comp_end68)
@SP
A = M - 1
M = D
// if-goto IF_THEN6
@SP
AM = M - 1
D = M
@IF_THEN6
D ; JNE
// goto IF_END6
@IF_END6
0 ; JMP
// label IF_THEN6
(IF_THEN6)
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 4
@4
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END6
(IF_END6)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true69
D ; JGT
D = 0
@comp_end69
0 ; JMP
(comp_true69)
D = 1
(comp_end69)
@SP
A = M - 1
M = D
// if-goto IF_THEN7
@SP
AM = M - 1
D = M
@IF_THEN7
D ; JNE
// goto IF_END7
@IF_END7
0 ; JMP
// label IF_THEN7
(IF_THEN7)
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 5
@5
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END7
(IF_END7)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true70
D ; JGT
D = 0
@comp_end70
0 ; JMP
(comp_true70)
D = 1
(comp_end70)
@SP
A = M - 1
M = D
// if-goto IF_THEN8
@SP
AM = M - 1
D = M
@IF_THEN8
D ; JNE
// goto IF_END8
@IF_END8
0 ; JMP
// label IF_THEN8
(IF_THEN8)
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 6
@6
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END8
(IF_END8)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true71
D ; JGT
D = 0
@comp_end71
0 ; JMP
(comp_true71)
D = 1
(comp_end71)
@SP
A = M - 1
M = D
// if-goto IF_THEN9
@SP
AM = M - 1
D = M
@IF_THEN9
D ; JNE
// goto IF_END9
@IF_END9
0 ; JMP
// label IF_THEN9
(IF_THEN9)
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 7
@7
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END9
(IF_END9)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true72
D ; JGT
D = 0
@comp_end72
0 ; JMP
(comp_true72)
D = 1
(comp_end72)
@SP
A = M - 1
M = D
// if-goto IF_THEN10
@SP
AM = M - 1
D = M
@IF_THEN10
D ; JNE
// goto IF_END10
@IF_END10
0 ; JMP
// label IF_THEN10
(IF_THEN10)
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 8
@8
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END10
(IF_END10)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true73
D ; JGT
D = 0
@comp_end73
0 ; JMP
(comp_true73)
D = 1
(comp_end73)
@SP
A = M - 1
M = D
// if-goto IF_THEN11
@SP
AM = M - 1
D = M
@IF_THEN11
D ; JNE
// goto IF_END11
@IF_END11
0 ; JMP
// label IF_THEN11
(IF_THEN11)
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 9
@9
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END11
(IF_END11)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true74
D ; JGT
D = 0
@comp_end74
0 ; JMP
(comp_true74)
D = 1
(comp_end74)
@SP
A = M - 1
M = D
// if-goto IF_THEN12
@SP
AM = M - 1
D = M
@IF_THEN12
D ; JNE
// goto IF_END12
@IF_END12
0 ; JMP
// label IF_THEN12
(IF_THEN12)
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 10
@10
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END12
(IF_END12)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true75
D ; JGT
D = 0
@comp_end75
0 ; JMP
(comp_true75)
D = 1
(comp_end75)
@SP
A = M - 1
M = D
// if-goto IF_THEN13
@SP
AM = M - 1
D = M
@IF_THEN13
D ; JNE
// goto IF_END13
@IF_END13
0 ; JMP
// label IF_THEN13
(IF_THEN13)
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 11
@11
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END13
(IF_END13)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true76
D ; JGT
D = 0
@comp_end76
0 ; JMP
(comp_true76)
D = 1
(comp_end76)
@SP
A = M - 1
M = D
// if-goto IF_THEN14
@SP
AM = M - 1
D = M
@IF_THEN14
D ; JNE
// goto IF_END14
@IF_END14
0 ; JMP
// label IF_THEN14
(IF_THEN14)
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 11
@11
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 12
@12
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END14
(IF_END14)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true77
D ; JGT
D = 0
@comp_end77
0 ; JMP
(comp_true77)
D = 1
(comp_end77)
@SP
A = M - 1
M = D
// if-goto IF_THEN15
@SP
AM = M - 1
D = M
@IF_THEN15
D ; JNE
// goto IF_END15
@IF_END15
0 ; JMP
// label IF_THEN15
(IF_THEN15)
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 13
@13
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END15
(IF_END15)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true78
D ; JGT
D = 0
@comp_end78
0 ; JMP
(comp_true78)
D = 1
(comp_end78)
@SP
A = M - 1
M = D
// if-goto IF_THEN16
@SP
AM = M - 1
D = M
@IF_THEN16
D ; JNE
// goto IF_END16
@IF_END16
0 ; JMP
// label IF_THEN16
(IF_THEN16)
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 13
@13
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 14
@14
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END16
(IF_END16)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true79
D ; JGT
D = 0
@comp_end79
0 ; JMP
(comp_true79)
D = 1
(comp_end79)
@SP
A = M - 1
M = D
// if-goto IF_THEN17
@SP
AM = M - 1
D = M
@IF_THEN17
D ; JNE
// goto IF_END17
@IF_END17
0 ; JMP
// label IF_THEN17
(IF_THEN17)
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 15
@15
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END17
(IF_END17)
// push this 2
@2
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 7
@7
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END3
(IF_END3)
// push this 10
@10
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// if-goto IF_THEN18
@SP
AM = M - 1
D = M
@IF_THEN18
D ; JNE
// goto IF_END18
@IF_END18
0 ; JMP
// label IF_THEN18
(IF_THEN18)
// push pointer 0
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Image.pushRender 1
@returnPosition553
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Image.pushRender
0 ; JMP
(returnPosition553)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop this 7
@7
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END18
(IF_END18)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Image.push
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Image.push
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Image.push
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Image.push
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Image.push
A = M - D
A = M
0 ; JMP
// function Image.draw 4
(Image.draw)
@SP
D = M
@LCL
M = D
@SP
D = M
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
@4
D = A
@SP
M = M + D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push constant 16384
@16384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition554
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition554)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND1
(WHILE_COND1)
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 1
@1
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true80
D ; JLT
D = 0
@comp_end80
0 ; JMP
(comp_true80)
D = 1
(comp_end80)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY1
@SP
AM = M - 1
D = M
@WHILE_BODY1
D ; JNE
// goto WHILE_END1
@WHILE_END1
0 ; JMP
// label WHILE_BODY1
(WHILE_BODY1)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND2
(WHILE_COND2)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 0
@0
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true81
D ; JLT
D = 0
@comp_end81
0 ; JMP
(comp_true81)
D = 1
(comp_end81)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY2
@SP
AM = M - 1
D = M
@WHILE_BODY2
D ; JNE
// goto WHILE_END2
@WHILE_END2
0 ; JMP
// label WHILE_BODY2
(WHILE_BODY2)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND2
@WHILE_COND2
0 ; JMP
// label WHILE_END2
(WHILE_END2)
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 0
@0
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 1
@1
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND1
@WHILE_COND1
0 ; JMP
// label WHILE_END1
(WHILE_END1)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Image.draw
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Image.draw
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Image.draw
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Image.draw
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Image.draw
A = M - D
A = M
0 ; JMP
// function Image.drawVScale 8
(Image.drawVScale)
@SP
D = M
@LCL
M = D
@SP
D = M
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
@8
D = A
@SP
M = M + D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push argument 3
@3
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// eq
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true82
D ; JEQ
D = 0
@comp_end82
0 ; JMP
(comp_true82)
D = 1
(comp_end82)
@SP
A = M - 1
M = D
// if-goto IF_THEN19
@SP
AM = M - 1
D = M
@IF_THEN19
D ; JNE
// goto IF_END19
@IF_END19
0 ; JMP
// label IF_THEN19
(IF_THEN19)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Image.drawVScale
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Image.drawVScale
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Image.drawVScale
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Image.drawVScale
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Image.drawVScale
A = M - D
A = M
0 ; JMP
// label IF_END19
(IF_END19)
// push constant 16384
@16384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition555
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition555)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 1
@1
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 3
@3
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Math.divide 2
@returnPosition556
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.divide
0 ; JMP
(returnPosition556)
// push this 0
@0
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition557
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition557)
// pop local 5
@5
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 1
@1
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 3
@3
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call MathsToo.mod 2
@returnPosition558
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@MathsToo.mod
0 ; JMP
(returnPosition558)
// pop local 6
@6
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 0
@0
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 7
@7
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 3
@3
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true83
D ; JLT
D = 0
@comp_end83
0 ; JMP
(comp_true83)
D = 1
(comp_end83)
@SP
A = M - 1
M = D
// if-goto IF_THEN20
@SP
AM = M - 1
D = M
@IF_THEN20
D ; JNE
// goto IF_END20
@IF_END20
0 ; JMP
// label IF_THEN20
(IF_THEN20)
// push argument 3
@3
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// pop argument 3
@3
D = A
@ARG
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 1
@1
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push this 0
@0
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition559
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition559)
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// pop local 7
@7
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END20
(IF_END20)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND3
(WHILE_COND3)
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 3
@3
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true84
D ; JLT
D = 0
@comp_end84
0 ; JMP
(comp_true84)
D = 1
(comp_end84)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY3
@SP
AM = M - 1
D = M
@WHILE_BODY3
D ; JNE
// goto WHILE_END3
@WHILE_END3
0 ; JMP
// label WHILE_BODY3
(WHILE_BODY3)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND4
(WHILE_COND4)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 0
@0
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true85
D ; JLT
D = 0
@comp_end85
0 ; JMP
(comp_true85)
D = 1
(comp_end85)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY4
@SP
AM = M - 1
D = M
@WHILE_BODY4
D ; JNE
// goto WHILE_END4
@WHILE_END4
0 ; JMP
// label WHILE_BODY4
(WHILE_BODY4)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND4
@WHILE_COND4
0 ; JMP
// label WHILE_END4
(WHILE_END4)
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 3
@3
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true86
D ; JGT
D = 0
@comp_end86
0 ; JMP
(comp_true86)
D = 1
(comp_end86)
@SP
A = M - 1
M = D
// if-goto IF_THEN21
@SP
AM = M - 1
D = M
@IF_THEN21
D ; JNE
// goto IF_END21
@IF_END21
0 ; JMP
// label IF_THEN21
(IF_THEN21)
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 3
@3
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END21
(IF_END21)
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 1
@1
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND3
@WHILE_COND3
0 ; JMP
// label WHILE_END3
(WHILE_END3)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Image.drawVScale
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Image.drawVScale
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Image.drawVScale
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Image.drawVScale
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Image.drawVScale
A = M - D
A = M
0 ; JMP
// function Image.drawColVScale 7
(Image.drawColVScale)
@SP
D = M
@LCL
M = D
@SP
D = M
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
@7
D = A
@SP
M = M + D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push argument 4
@4
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// eq
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true87
D ; JEQ
D = 0
@comp_end87
0 ; JMP
(comp_true87)
D = 1
(comp_end87)
@SP
A = M - 1
M = D
// if-goto IF_THEN22
@SP
AM = M - 1
D = M
@IF_THEN22
D ; JNE
// goto IF_END22
@IF_END22
0 ; JMP
// label IF_THEN22
(IF_THEN22)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Image.drawColVScale
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Image.drawColVScale
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Image.drawColVScale
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Image.drawColVScale
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Image.drawColVScale
A = M - D
A = M
0 ; JMP
// label IF_END22
(IF_END22)
// push constant 16384
@16384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition560
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition560)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 1
@1
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 1
@1
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 4
@4
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Math.divide 2
@returnPosition561
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.divide
0 ; JMP
(returnPosition561)
// push this 0
@0
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition562
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition562)
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 1
@1
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 4
@4
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call MathsToo.mod 2
@returnPosition563
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@MathsToo.mod
0 ; JMP
(returnPosition563)
// pop local 5
@5
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 0
@0
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 6
@6
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 4
@4
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true88
D ; JLT
D = 0
@comp_end88
0 ; JMP
(comp_true88)
D = 1
(comp_end88)
@SP
A = M - 1
M = D
// if-goto IF_THEN23
@SP
AM = M - 1
D = M
@IF_THEN23
D ; JNE
// goto IF_END23
@IF_END23
0 ; JMP
// label IF_THEN23
(IF_THEN23)
// push argument 4
@4
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// pop argument 4
@4
D = A
@ARG
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 1
@1
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push this 0
@0
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition564
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition564)
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// pop local 6
@6
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END23
(IF_END23)
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 3
@3
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND5
(WHILE_COND5)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 4
@4
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true89
D ; JLT
D = 0
@comp_end89
0 ; JMP
(comp_true89)
D = 1
(comp_end89)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY5
@SP
AM = M - 1
D = M
@WHILE_BODY5
D ; JNE
// goto WHILE_END5
@WHILE_END5
0 ; JMP
// label WHILE_BODY5
(WHILE_BODY5)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 4
@4
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true90
D ; JGT
D = 0
@comp_end90
0 ; JMP
(comp_true90)
D = 1
(comp_end90)
@SP
A = M - 1
M = D
// if-goto IF_THEN24
@SP
AM = M - 1
D = M
@IF_THEN24
D ; JNE
// goto IF_END24
@IF_END24
0 ; JMP
// label IF_THEN24
(IF_THEN24)
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 4
@4
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END24
(IF_END24)
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 1
@1
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND5
@WHILE_COND5
0 ; JMP
// label WHILE_END5
(WHILE_END5)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Image.drawColVScale
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Image.drawColVScale
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Image.drawColVScale
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Image.drawColVScale
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Image.drawColVScale
A = M - D
A = M
0 ; JMP
// function Image.drawDelta 7
(Image.drawDelta)
@SP
D = M
@LCL
M = D
@SP
D = M
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
@7
D = A
@SP
M = M + D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 8
@8
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop argument 1
@1
D = A
@ARG
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 9
@9
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop argument 2
@2
D = A
@ARG
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 16384
@16384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition565
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition565)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 5
@5
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop local 6
@6
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND6
(WHILE_COND6)
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 1
@1
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true91
D ; JLT
D = 0
@comp_end91
0 ; JMP
(comp_true91)
D = 1
(comp_end91)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY6
@SP
AM = M - 1
D = M
@WHILE_BODY6
D ; JNE
// goto WHILE_END6
@WHILE_END6
0 ; JMP
// label WHILE_BODY6
(WHILE_BODY6)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND7
(WHILE_COND7)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 0
@0
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true92
D ; JLT
D = 0
@comp_end92
0 ; JMP
(comp_true92)
D = 1
(comp_end92)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY7
@SP
AM = M - 1
D = M
@WHILE_BODY7
D ; JNE
// goto WHILE_END7
@WHILE_END7
0 ; JMP
// label WHILE_BODY7
(WHILE_BODY7)
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// if-goto IF_THEN25
@SP
AM = M - 1
D = M
@IF_THEN25
D ; JNE
// goto IF_END25
@IF_END25
0 ; JMP
// label IF_THEN25
(IF_THEN25)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END25
(IF_END25)
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// eq
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true93
D ; JEQ
D = 0
@comp_end93
0 ; JMP
(comp_true93)
D = 1
(comp_end93)
@SP
A = M - 1
M = D
// if-goto IF_THEN26
@SP
AM = M - 1
D = M
@IF_THEN26
D ; JNE
// goto IF_ELSE26
@IF_ELSE26
0 ; JMP
// label IF_THEN26
(IF_THEN26)
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 5
@5
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto IF_END26
@IF_END26
0 ; JMP
// label IF_ELSE26
(IF_ELSE26)
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 5
@5
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END26
(IF_END26)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND7
@WHILE_COND7
0 ; JMP
// label WHILE_END7
(WHILE_END7)
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 1
@1
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND6
@WHILE_COND6
0 ; JMP
// label WHILE_END6
(WHILE_END6)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Image.drawDelta
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Image.drawDelta
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Image.drawDelta
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Image.drawDelta
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Image.drawDelta
A = M - D
A = M
0 ; JMP
// function Image.pushRender 1
(Image.pushRender)
@SP
D = M
@LCL
M = D
@SP
A = M
M = 0
@SP
M = M + 1
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// label WHILE_COND8
(WHILE_COND8)
// push this 14
@14
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 1
@1
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true94
D ; JLT
D = 0
@comp_end94
0 ; JMP
(comp_true94)
D = 1
(comp_end94)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY8
@SP
AM = M - 1
D = M
@WHILE_BODY8
D ; JNE
// goto WHILE_END8
@WHILE_END8
0 ; JMP
// label WHILE_BODY8
(WHILE_BODY8)
// label WHILE_COND9
(WHILE_COND9)
// push this 13
@13
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 0
@0
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true95
D ; JLT
D = 0
@comp_end95
0 ; JMP
(comp_true95)
D = 1
(comp_end95)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY9
@SP
AM = M - 1
D = M
@WHILE_BODY9
D ; JNE
// goto WHILE_END9
@WHILE_END9
0 ; JMP
// label WHILE_BODY9
(WHILE_BODY9)
// push this 13
@13
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 15
@15
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 13
@13
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 13
@13
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 15
@15
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true96
D ; JGT
D = 0
@comp_end96
0 ; JMP
(comp_true96)
D = 1
(comp_end96)
@SP
A = M - 1
M = D
// if-goto IF_THEN27
@SP
AM = M - 1
D = M
@IF_THEN27
D ; JNE
// goto IF_END27
@IF_END27
0 ; JMP
// label IF_THEN27
(IF_THEN27)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Image.pushRender
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Image.pushRender
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Image.pushRender
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Image.pushRender
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Image.pushRender
A = M - D
A = M
0 ; JMP
// label IF_END27
(IF_END27)
// goto WHILE_COND9
@WHILE_COND9
0 ; JMP
// label WHILE_END9
(WHILE_END9)
// push this 15
@15
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 15
@15
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop this 13
@13
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 14
@14
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 14
@14
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND8
@WHILE_COND8
0 ; JMP
// label WHILE_END8
(WHILE_END8)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Image.pushRender
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Image.pushRender
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Image.pushRender
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Image.pushRender
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Image.pushRender
A = M - D
A = M
0 ; JMP

// === MemoryToo ===

// function MemoryToo.plotHoles 5
(MemoryToo.plotHoles)
@SP
D = M
@LCL
M = D
@SP
D = M
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
@5
D = A
@SP
M = M + D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// not
@SP
A = M - 1
M = ! M
// call Screen.setColor 1
@returnPosition566
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Screen.setColor
0 ; JMP
(returnPosition566)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 511
@511
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 255
@255
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Screen.drawRectangle 4
@returnPosition567
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@9
D = A
@SP
D = M - D
@ARG
M = D
@Screen.drawRectangle
0 ; JMP
(returnPosition567)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 21845
@21845
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 16384
@16384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND1
(WHILE_COND1)
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true97
D ; JLT
D = 0
@comp_end97
0 ; JMP
(comp_true97)
D = 1
(comp_end97)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY1
@SP
AM = M - 1
D = M
@WHILE_BODY1
D ; JNE
// goto WHILE_END1
@WHILE_END1
0 ; JMP
// label WHILE_BODY1
(WHILE_BODY1)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 1
@1
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// eq
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true98
D ; JEQ
D = 0
@comp_end98
0 ; JMP
(comp_true98)
D = 1
(comp_end98)
@SP
A = M - 1
M = D
// if-goto IF_THEN1
@SP
AM = M - 1
D = M
@IF_THEN1
D ; JNE
// goto IF_END1
@IF_END1
0 ; JMP
// label IF_THEN1
(IF_THEN1)
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// not
@SP
A = M - 1
M = ! M
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 1
@1
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END1
(IF_END1)
// goto WHILE_COND1
@WHILE_COND1
0 ; JMP
// label WHILE_END1
(WHILE_END1)
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 20
@20
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Output.moveCursor 2
@returnPosition568
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Output.moveCursor
0 ; JMP
(returnPosition568)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 22
@22
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.new 1
@returnPosition569
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@String.new
0 ; JMP
(returnPosition569)
// push constant 60
@60
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition570
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition570)
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition571
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition571)
// push constant 50
@50
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition572
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition572)
// push constant 75
@75
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition573
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition573)
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition574
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition574)
// push constant 104
@104
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition575
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition575)
// push constant 105
@105
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition576
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition576)
// push constant 99
@99
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition577
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition577)
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition578
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition578)
// push constant 115
@115
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition579
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition579)
// push constant 117
@117
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition580
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition580)
// push constant 110
@110
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition581
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition581)
// push constant 116
@116
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition582
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition582)
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition583
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition583)
// push constant 100
@100
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition584
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition584)
// push constant 114
@114
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition585
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition585)
// push constant 97
@97
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition586
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition586)
// push constant 99
@99
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition587
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition587)
// push constant 111
@111
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition588
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition588)
// push constant 110
@110
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition589
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition589)
// push constant 101
@101
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition590
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition590)
// push constant 115
@115
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call String.appendChar 2
@returnPosition591
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@String.appendChar
0 ; JMP
(returnPosition591)
// call Output.printString 1
@returnPosition592
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Output.printString
0 ; JMP
(returnPosition592)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 1
@1
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 2048
@2048
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND2
(WHILE_COND2)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16384
@16384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true99
D ; JLT
D = 0
@comp_end99
0 ; JMP
(comp_true99)
D = 1
(comp_end99)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY2
@SP
AM = M - 1
D = M
@WHILE_BODY2
D ; JNE
// goto WHILE_END2
@WHILE_END2
0 ; JMP
// label WHILE_BODY2
(WHILE_BODY2)
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// eq
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true100
D ; JEQ
D = 0
@comp_end100
0 ; JMP
(comp_true100)
D = 1
(comp_end100)
@SP
A = M - 1
M = D
// if-goto IF_THEN2
@SP
AM = M - 1
D = M
@IF_THEN2
D ; JNE
// goto IF_ELSE2
@IF_ELSE2
0 ; JMP
// label IF_THEN2
(IF_THEN2)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Screen.setColor 1
@returnPosition593
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Screen.setColor
0 ; JMP
(returnPosition593)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto IF_END2
@IF_END2
0 ; JMP
// label IF_ELSE2
(IF_ELSE2)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// not
@SP
A = M - 1
M = ! M
// call Screen.setColor 1
@returnPosition594
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Screen.setColor
0 ; JMP
(returnPosition594)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END2
(IF_END2)
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// call Screen.drawLine 4
@returnPosition595
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@9
D = A
@SP
D = M - D
@ARG
M = D
@Screen.drawLine
0 ; JMP
(returnPosition595)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 1
@1
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 511
@511
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true101
D ; JGT
D = 0
@comp_end101
0 ; JMP
(comp_true101)
D = 1
(comp_end101)
@SP
A = M - 1
M = D
// if-goto IF_THEN3
@SP
AM = M - 1
D = M
@IF_THEN3
D ; JNE
// goto IF_END3
@IF_END3
0 ; JMP
// label IF_THEN3
(IF_THEN3)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 1
@1
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END3
(IF_END3)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND2
@WHILE_COND2
0 ; JMP
// label WHILE_END2
(WHILE_END2)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_MemoryToo.plotHoles
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_MemoryToo.plotHoles
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_MemoryToo.plotHoles
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_MemoryToo.plotHoles
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_MemoryToo.plotHoles
A = M - D
A = M
0 ; JMP
// function MemoryToo.copy 1
(MemoryToo.copy)
@SP
D = M
@LCL
M = D
@SP
A = M
M = 0
@SP
M = M + 1
// label WHILE_COND3
(WHILE_COND3)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true102
D ; JLT
D = 0
@comp_end102
0 ; JMP
(comp_true102)
D = 1
(comp_end102)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY3
@SP
AM = M - 1
D = M
@WHILE_BODY3
D ; JNE
// goto WHILE_END3
@WHILE_END3
0 ; JMP
// label WHILE_BODY3
(WHILE_BODY3)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND3
@WHILE_COND3
0 ; JMP
// label WHILE_END3
(WHILE_END3)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_MemoryToo.copy
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_MemoryToo.copy
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_MemoryToo.copy
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_MemoryToo.copy
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_MemoryToo.copy
A = M - D
A = M
0 ; JMP

// === Sinus ===

// function Sinus.init 1
(Sinus.init)
@SP
D = M
@LCL
M = D
@SP
A = M
M = 0
@SP
M = M + 1
// push static 1
@Sinus.1
D = M
@SP
A = M
M = D
@SP
M = M + 1
// if-goto IF_THEN1
@SP
AM = M - 1
D = M
@IF_THEN1
D ; JNE
// goto IF_END1
@IF_END1
0 ; JMP
// label IF_THEN1
(IF_THEN1)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Sinus.init
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Sinus.init
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Sinus.init
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Sinus.init
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Sinus.init
A = M - D
A = M
0 ; JMP
// label IF_END1
(IF_END1)
// push constant 360
@360
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Array.new 1
@returnPosition596
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Array.new
0 ; JMP
(returnPosition596)
// pop static 0
@SP
AM = M - 1
D = M
@Sinus.0
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 9
@9
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 10
@10
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 12
@12
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Sinus._push91 9
@returnPosition597
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@14
D = A
@SP
D = M - D
@ARG
M = D
@Sinus._push91
0 ; JMP
(returnPosition597)
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 14
@14
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 16
@16
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 17
@17
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 19
@19
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 21
@21
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 22
@22
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 24
@24
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 26
@26
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Sinus._push91 9
@returnPosition598
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@14
D = A
@SP
D = M - D
@ARG
M = D
@Sinus._push91
0 ; JMP
(returnPosition598)
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 28
@28
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 29
@29
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 31
@31
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 33
@33
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 34
@34
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 36
@36
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 37
@37
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 39
@39
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Sinus._push91 9
@returnPosition599
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@14
D = A
@SP
D = M - D
@ARG
M = D
@Sinus._push91
0 ; JMP
(returnPosition599)
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 41
@41
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 42
@42
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 44
@44
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 45
@45
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 47
@47
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 48
@48
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 50
@50
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 52
@52
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Sinus._push91 9
@returnPosition600
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@14
D = A
@SP
D = M - D
@ARG
M = D
@Sinus._push91
0 ; JMP
(returnPosition600)
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 53
@53
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 54
@54
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 56
@56
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 57
@57
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 59
@59
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 60
@60
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 62
@62
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 63
@63
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Sinus._push91 9
@returnPosition601
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@14
D = A
@SP
D = M - D
@ARG
M = D
@Sinus._push91
0 ; JMP
(returnPosition601)
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 64
@64
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 66
@66
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 67
@67
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 68
@68
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 69
@69
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 71
@71
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 72
@72
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 73
@73
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Sinus._push91 9
@returnPosition602
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@14
D = A
@SP
D = M - D
@ARG
M = D
@Sinus._push91
0 ; JMP
(returnPosition602)
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 74
@74
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 75
@75
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 77
@77
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 78
@78
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 79
@79
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 80
@80
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 81
@81
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 82
@82
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Sinus._push91 9
@returnPosition603
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@14
D = A
@SP
D = M - D
@ARG
M = D
@Sinus._push91
0 ; JMP
(returnPosition603)
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 83
@83
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 84
@84
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 85
@85
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 86
@86
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 87
@87
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 87
@87
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 88
@88
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 89
@89
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Sinus._push91 9
@returnPosition604
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@14
D = A
@SP
D = M - D
@ARG
M = D
@Sinus._push91
0 ; JMP
(returnPosition604)
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 90
@90
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 91
@91
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 91
@91
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 92
@92
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 93
@93
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 93
@93
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 94
@94
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 95
@95
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Sinus._push91 9
@returnPosition605
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@14
D = A
@SP
D = M - D
@ARG
M = D
@Sinus._push91
0 ; JMP
(returnPosition605)
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 95
@95
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 96
@96
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 96
@96
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 97
@97
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 97
@97
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 97
@97
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 98
@98
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 98
@98
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Sinus._push91 9
@returnPosition606
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@14
D = A
@SP
D = M - D
@ARG
M = D
@Sinus._push91
0 ; JMP
(returnPosition606)
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 98
@98
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 99
@99
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 99
@99
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 99
@99
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 99
@99
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 100
@100
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 100
@100
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 100
@100
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Sinus._push91 9
@returnPosition607
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@14
D = A
@SP
D = M - D
@ARG
M = D
@Sinus._push91
0 ; JMP
(returnPosition607)
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 100
@100
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 100
@100
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 100
@100
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Sinus._push91 9
@returnPosition608
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@14
D = A
@SP
D = M - D
@ARG
M = D
@Sinus._push91
0 ; JMP
(returnPosition608)
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 91
@91
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND1
(WHILE_COND1)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 181
@181
D = A
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true103
D ; JLT
D = 0
@comp_end103
0 ; JMP
(comp_true103)
D = 1
(comp_end103)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY1
@SP
AM = M - 1
D = M
@WHILE_BODY1
D ; JNE
// goto WHILE_END1
@WHILE_END1
0 ; JMP
// label WHILE_BODY1
(WHILE_BODY1)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push static 0
@Sinus.0
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push static 0
@Sinus.0
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 180
@180
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND1
@WHILE_COND1
0 ; JMP
// label WHILE_END1
(WHILE_END1)
// label WHILE_COND2
(WHILE_COND2)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 271
@271
D = A
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true104
D ; JLT
D = 0
@comp_end104
0 ; JMP
(comp_true104)
D = 1
(comp_end104)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY2
@SP
AM = M - 1
D = M
@WHILE_BODY2
D ; JNE
// goto WHILE_END2
@WHILE_END2
0 ; JMP
// label WHILE_BODY2
(WHILE_BODY2)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push static 0
@Sinus.0
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push static 0
@Sinus.0
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 180
@180
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND2
@WHILE_COND2
0 ; JMP
// label WHILE_END2
(WHILE_END2)
// label WHILE_COND3
(WHILE_COND3)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 360
@360
D = A
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true105
D ; JLT
D = 0
@comp_end105
0 ; JMP
(comp_true105)
D = 1
(comp_end105)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY3
@SP
AM = M - 1
D = M
@WHILE_BODY3
D ; JNE
// goto WHILE_END3
@WHILE_END3
0 ; JMP
// label WHILE_BODY3
(WHILE_BODY3)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push static 0
@Sinus.0
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push static 0
@Sinus.0
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 360
@360
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND3
@WHILE_COND3
0 ; JMP
// label WHILE_END3
(WHILE_END3)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// not
@SP
A = M - 1
M = ! M
// pop static 1
@SP
AM = M - 1
D = M
@Sinus.1
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Sinus.init
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Sinus.init
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Sinus.init
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Sinus.init
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Sinus.init
A = M - D
A = M
0 ; JMP
// function Sinus._push91 1
(Sinus._push91)
@SP
D = M
@LCL
M = D
@SP
A = M
M = 0
@SP
M = M + 1
// push constant 91
@91
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true106
D ; JGT
D = 0
@comp_end106
0 ; JMP
(comp_true106)
D = 1
(comp_end106)
@SP
A = M - 1
M = D
// if-goto IF_THEN2
@SP
AM = M - 1
D = M
@IF_THEN2
D ; JNE
// goto IF_END2
@IF_END2
0 ; JMP
// label IF_THEN2
(IF_THEN2)
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push static 0
@Sinus.0
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END2
(IF_END2)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true107
D ; JGT
D = 0
@comp_end107
0 ; JMP
(comp_true107)
D = 1
(comp_end107)
@SP
A = M - 1
M = D
// if-goto IF_THEN3
@SP
AM = M - 1
D = M
@IF_THEN3
D ; JNE
// goto IF_END3
@IF_END3
0 ; JMP
// label IF_THEN3
(IF_THEN3)
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push static 0
@Sinus.0
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END3
(IF_END3)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true108
D ; JGT
D = 0
@comp_end108
0 ; JMP
(comp_true108)
D = 1
(comp_end108)
@SP
A = M - 1
M = D
// if-goto IF_THEN4
@SP
AM = M - 1
D = M
@IF_THEN4
D ; JNE
// goto IF_END4
@IF_END4
0 ; JMP
// label IF_THEN4
(IF_THEN4)
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push static 0
@Sinus.0
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 3
@3
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END4
(IF_END4)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true109
D ; JGT
D = 0
@comp_end109
0 ; JMP
(comp_true109)
D = 1
(comp_end109)
@SP
A = M - 1
M = D
// if-goto IF_THEN5
@SP
AM = M - 1
D = M
@IF_THEN5
D ; JNE
// goto IF_END5
@IF_END5
0 ; JMP
// label IF_THEN5
(IF_THEN5)
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push static 0
@Sinus.0
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 4
@4
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END5
(IF_END5)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true110
D ; JGT
D = 0
@comp_end110
0 ; JMP
(comp_true110)
D = 1
(comp_end110)
@SP
A = M - 1
M = D
// if-goto IF_THEN6
@SP
AM = M - 1
D = M
@IF_THEN6
D ; JNE
// goto IF_END6
@IF_END6
0 ; JMP
// label IF_THEN6
(IF_THEN6)
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push static 0
@Sinus.0
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 5
@5
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END6
(IF_END6)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true111
D ; JGT
D = 0
@comp_end111
0 ; JMP
(comp_true111)
D = 1
(comp_end111)
@SP
A = M - 1
M = D
// if-goto IF_THEN7
@SP
AM = M - 1
D = M
@IF_THEN7
D ; JNE
// goto IF_END7
@IF_END7
0 ; JMP
// label IF_THEN7
(IF_THEN7)
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 5
@5
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push static 0
@Sinus.0
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 6
@6
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END7
(IF_END7)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true112
D ; JGT
D = 0
@comp_end112
0 ; JMP
(comp_true112)
D = 1
(comp_end112)
@SP
A = M - 1
M = D
// if-goto IF_THEN8
@SP
AM = M - 1
D = M
@IF_THEN8
D ; JNE
// goto IF_END8
@IF_END8
0 ; JMP
// label IF_THEN8
(IF_THEN8)
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 6
@6
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push static 0
@Sinus.0
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 7
@7
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END8
(IF_END8)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true113
D ; JGT
D = 0
@comp_end113
0 ; JMP
(comp_true113)
D = 1
(comp_end113)
@SP
A = M - 1
M = D
// if-goto IF_THEN9
@SP
AM = M - 1
D = M
@IF_THEN9
D ; JNE
// goto IF_END9
@IF_END9
0 ; JMP
// label IF_THEN9
(IF_THEN9)
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 7
@7
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push static 0
@Sinus.0
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 8
@8
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END9
(IF_END9)
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Sinus._push91
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Sinus._push91
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Sinus._push91
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Sinus._push91
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Sinus._push91
A = M - D
A = M
0 ; JMP
// function Sinus.getTable 0
(Sinus.getTable)
@SP
D = M
@LCL
M = D
// push static 0
@Sinus.0
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Sinus.getTable
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Sinus.getTable
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Sinus.getTable
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Sinus.getTable
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Sinus.getTable
A = M - D
A = M
0 ; JMP
// function Sinus.sin 0
(Sinus.sin)
@SP
D = M
@LCL
M = D
// push static 0
@Sinus.0
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Sinus.sin
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Sinus.sin
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Sinus.sin
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Sinus.sin
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Sinus.sin
A = M - D
A = M
0 ; JMP
// function Sinus.cos 0
(Sinus.cos)
@SP
D = M
@LCL
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 90
@90
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop argument 0
@0
D = A
@ARG
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 359
@359
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true114
D ; JGT
D = 0
@comp_end114
0 ; JMP
(comp_true114)
D = 1
(comp_end114)
@SP
A = M - 1
M = D
// if-goto IF_THEN10
@SP
AM = M - 1
D = M
@IF_THEN10
D ; JNE
// goto IF_END10
@IF_END10
0 ; JMP
// label IF_THEN10
(IF_THEN10)
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 360
@360
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop argument 0
@0
D = A
@ARG
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END10
(IF_END10)
// push static 0
@Sinus.0
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Sinus.cos
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Sinus.cos
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Sinus.cos
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Sinus.cos
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Sinus.cos
A = M - D
A = M
0 ; JMP
// function Sinus.resample 7
(Sinus.resample)
@SP
D = M
@LCL
M = D
@SP
D = M
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
@7
D = A
@SP
M = M + D
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Array.new 1
@returnPosition609
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Array.new
0 ; JMP
(returnPosition609)
// pop local 6
@6
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Math.divide 2
@returnPosition610
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.divide
0 ; JMP
(returnPosition610)
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call MathsToo.mod 2
@returnPosition611
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@MathsToo.mod
0 ; JMP
(returnPosition611)
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 5
@5
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND4
(WHILE_COND4)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true115
D ; JLT
D = 0
@comp_end115
0 ; JMP
(comp_true115)
D = 1
(comp_end115)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY4
@SP
AM = M - 1
D = M
@WHILE_BODY4
D ; JNE
// goto WHILE_END4
@WHILE_END4
0 ; JMP
// label WHILE_BODY4
(WHILE_BODY4)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// call Sinus.sin 1
@returnPosition612
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Sinus.sin
0 ; JMP
(returnPosition612)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 1
@1
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 5
@5
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true116
D ; JGT
D = 0
@comp_end116
0 ; JMP
(comp_true116)
D = 1
(comp_end116)
@SP
A = M - 1
M = D
// if-goto IF_THEN11
@SP
AM = M - 1
D = M
@IF_THEN11
D ; JNE
// goto IF_END11
@IF_END11
0 ; JMP
// label IF_THEN11
(IF_THEN11)
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop local 5
@5
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 1
@1
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END11
(IF_END11)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND4
@WHILE_COND4
0 ; JMP
// label WHILE_END4
(WHILE_END4)
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_Sinus.resample
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_Sinus.resample
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_Sinus.resample
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_Sinus.resample
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_Sinus.resample
A = M - D
A = M
0 ; JMP

// === RotoZoom ===

// function RotoZoom.new 0
(RotoZoom.new)
@SP
D = M
@LCL
M = D
// push constant 19
@19
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Memory.alloc 1
@returnPosition613
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Memory.alloc
0 ; JMP
(returnPosition613)
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// call Sinus.init 0
@returnPosition614
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@5
D = A
@SP
D = M - D
@ARG
M = D
@Sinus.init
0 ; JMP
(returnPosition614)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 360
@360
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push constant 256
@256
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Sinus.resample 3
@returnPosition615
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@8
D = A
@SP
D = M - D
@ARG
M = D
@Sinus.resample
0 ; JMP
(returnPosition615)
// pop this 4
@4
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// call Dither4x4.init 0
@returnPosition616
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@5
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4.init
0 ; JMP
(returnPosition616)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4.getTable 1
@returnPosition617
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4.getTable
0 ; JMP
(returnPosition617)
// pop this 10
@10
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4.getTable 1
@returnPosition618
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4.getTable
0 ; JMP
(returnPosition618)
// pop this 11
@11
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4.getTable 1
@returnPosition619
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4.getTable
0 ; JMP
(returnPosition619)
// pop this 12
@12
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Dither4x4.getTable 1
@returnPosition620
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4.getTable
0 ; JMP
(returnPosition620)
// pop this 13
@13
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// call Dither4x4.getOffset 0
@returnPosition621
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@5
D = A
@SP
D = M - D
@ARG
M = D
@Dither4x4.getOffset
0 ; JMP
(returnPosition621)
// pop this 14
@14
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 10
@10
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 14
@14
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 15
@15
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 11
@11
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 14
@14
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 16
@16
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 12
@12
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 14
@14
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 17
@17
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 13
@13
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 14
@14
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 18
@18
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push pointer 0
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 3
@3
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 4
@4
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call RotoZoom.reset 6
@returnPosition622
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@11
D = A
@SP
D = M - D
@ARG
M = D
@RotoZoom.reset
0 ; JMP
(returnPosition622)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push pointer 0
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_RotoZoom.new
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_RotoZoom.new
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_RotoZoom.new
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_RotoZoom.new
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_RotoZoom.new
A = M - D
A = M
0 ; JMP
// function RotoZoom.dispose 0
(RotoZoom.dispose)
@SP
D = M
@LCL
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push pointer 0
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Memory.dealloc 1
@returnPosition623
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@Memory.dealloc
0 ; JMP
(returnPosition623)
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_RotoZoom.dispose
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_RotoZoom.dispose
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_RotoZoom.dispose
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_RotoZoom.dispose
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_RotoZoom.dispose
A = M - D
A = M
0 ; JMP
// function RotoZoom.reset 0
(RotoZoom.reset)
@SP
D = M
@LCL
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 0
@0
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 0
@0
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.getBitmap 1
@returnPosition624
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.getBitmap
0 ; JMP
(returnPosition624)
// pop this 1
@1
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 0
@0
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.getWidth 1
@returnPosition625
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.getWidth
0 ; JMP
(returnPosition625)
// pop this 2
@2
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 0
@0
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call ChunkyImage.getHeight 1
@returnPosition626
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@6
D = A
@SP
D = M - D
@ARG
M = D
@ChunkyImage.getHeight
0 ; JMP
(returnPosition626)
// pop this 3
@3
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 16384
@16384
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push argument 3
@3
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition627
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition627)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 5
@5
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 4
@4
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 6
@6
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 5
@5
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop this 7
@7
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 2
@2
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop this 8
@8
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 3
@3
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop this 9
@9
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_RotoZoom.reset
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_RotoZoom.reset
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_RotoZoom.reset
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_RotoZoom.reset
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_RotoZoom.reset
A = M - D
A = M
0 ; JMP
// function RotoZoom.setShadeOffset 0
(RotoZoom.setShadeOffset)
@SP
D = M
@LCL
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true117
D ; JLT
D = 0
@comp_end117
0 ; JMP
(comp_true117)
D = 1
(comp_end117)
@SP
A = M - 1
M = D
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true118
D ; JGT
D = 0
@comp_end118
0 ; JMP
(comp_true118)
D = 1
(comp_end118)
@SP
A = M - 1
M = D
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// if-goto IF_THEN1
@SP
AM = M - 1
D = M
@IF_THEN1
D ; JNE
// goto IF_END1
@IF_END1
0 ; JMP
// label IF_THEN1
(IF_THEN1)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_RotoZoom.setShadeOffset
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_RotoZoom.setShadeOffset
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_RotoZoom.setShadeOffset
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_RotoZoom.setShadeOffset
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_RotoZoom.setShadeOffset
A = M - D
A = M
0 ; JMP
// label IF_END1
(IF_END1)
// push this 10
@10
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition628
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition628)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 15
@15
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 11
@11
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition629
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition629)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 16
@16
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 12
@12
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition630
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition630)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 17
@17
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 13
@13
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 4
@4
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition631
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition631)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop this 18
@18
D = A
@THIS
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_RotoZoom.setShadeOffset
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_RotoZoom.setShadeOffset
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_RotoZoom.setShadeOffset
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_RotoZoom.setShadeOffset
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_RotoZoom.setShadeOffset
A = M - D
A = M
0 ; JMP
// function RotoZoom.drawFrame 22
(RotoZoom.drawFrame)
@SP
D = M
@LCL
M = D
@SP
D = M
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
@22
D = A
@SP
M = M + D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop pointer 0
@SP
AM = M - 1
D = M
@THIS
M = D
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 3
@3
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 63
@63
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push constant 255
@255
D = A
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 4
@4
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition632
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition632)
// push constant 100
@100
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.divide 2
@returnPosition633
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.divide
0 ; JMP
(returnPosition633)
// pop local 14
@14
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 4
@4
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 3
@3
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 255
@255
D = A
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 4
@4
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition634
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition634)
// push constant 100
@100
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.divide 2
@returnPosition635
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.divide
0 ; JMP
(returnPosition635)
// pop local 15
@15
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 14
@14
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 14
@14
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 16
@16
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 15
@15
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 15
@15
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 17
@17
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 16
@16
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 14
@14
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 18
@18
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 17
@17
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 15
@15
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 19
@19
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 18
@18
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 14
@14
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 20
@20
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 19
@19
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 15
@15
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 21
@21
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 15
@15
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// pop local 12
@12
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 14
@14
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 13
@13
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 100
@100
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition636
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition636)
// push this 6
@6
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition637
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition637)
// push local 14
@14
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition638
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition638)
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.divide 2
@returnPosition639
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.divide
0 ; JMP
(returnPosition639)
// push local 12
@12
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition640
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition640)
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop local 10
@10
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 2
@2
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 100
@100
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition641
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition641)
// push this 6
@6
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition642
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition642)
// push local 15
@15
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition643
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition643)
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 8
@8
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.divide 2
@returnPosition644
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.divide
0 ; JMP
(returnPosition644)
// push local 13
@13
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition645
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition645)
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop local 11
@11
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 5
@5
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 7
@7
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition646
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition646)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 1
@1
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND1
(WHILE_COND1)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true119
D ; JLT
D = 0
@comp_end119
0 ; JMP
(comp_true119)
D = 1
(comp_end119)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY1
@SP
AM = M - 1
D = M
@WHILE_BODY1
D ; JNE
// goto WHILE_END1
@WHILE_END1
0 ; JMP
// label WHILE_BODY1
(WHILE_BODY1)
// push local 10
@10
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 11
@11
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 5
@5
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 6
@6
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND2
(WHILE_COND2)
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// lt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true120
D ; JLT
D = 0
@comp_end120
0 ; JMP
(comp_true120)
D = 1
(comp_end120)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY2
@SP
AM = M - 1
D = M
@WHILE_BODY2
D ; JNE
// goto WHILE_END2
@WHILE_END2
0 ; JMP
// label WHILE_BODY2
(WHILE_BODY2)
// push this 1
@1
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 100
@100
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.divide 2
@returnPosition647
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.divide
0 ; JMP
(returnPosition647)
// push this 8
@8
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 100
@100
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.divide 2
@returnPosition648
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.divide
0 ; JMP
(returnPosition648)
// push this 9
@9
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// push this 2
@2
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition649
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition649)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 6
@6
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 1
@1
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 14
@14
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push constant 100
@100
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.divide 2
@returnPosition650
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.divide
0 ; JMP
(returnPosition650)
// push this 8
@8
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 15
@15
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push constant 100
@100
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.divide 2
@returnPosition651
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.divide
0 ; JMP
(returnPosition651)
// push this 9
@9
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// push this 2
@2
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition652
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition652)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 7
@7
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 1
@1
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 16
@16
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push constant 100
@100
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.divide 2
@returnPosition653
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.divide
0 ; JMP
(returnPosition653)
// push this 8
@8
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 17
@17
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push constant 100
@100
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.divide 2
@returnPosition654
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.divide
0 ; JMP
(returnPosition654)
// push this 9
@9
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// push this 2
@2
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition655
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition655)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 8
@8
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push this 1
@1
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 18
@18
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push constant 100
@100
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.divide 2
@returnPosition656
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.divide
0 ; JMP
(returnPosition656)
// push this 8
@8
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 19
@19
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push constant 100
@100
D = A
@SP
A = M
M = D
@SP
M = M + 1
// call Math.divide 2
@returnPosition657
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.divide
0 ; JMP
(returnPosition657)
// push this 9
@9
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// push this 2
@2
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition658
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition658)
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop local 9
@9
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 15
@15
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 16
@16
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 17
@17
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 8
@8
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 18
@18
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 9
@9
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 32
@32
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 15
@15
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 16
@16
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 17
@17
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 8
@8
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 18
@18
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 9
@9
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 64
@64
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 15
@15
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 16
@16
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 17
@17
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 8
@8
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 18
@18
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 9
@9
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 2
@2
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 96
@96
D = A
@SP
A = M
M = D
@SP
M = M + 1
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// push this 15
@15
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 6
@6
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push this 16
@16
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 7
@7
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 17
@17
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 8
@8
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// push this 18
@18
D = A
@THIS
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 9
@9
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 3
@3
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push that 0
@0
D = A
@THAT
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// pop temp 0
@5
D = A
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// pop pointer 1
@SP
AM = M - 1
D = M
@THAT
M = D
// push temp 0
@5
D = M
@SP
A = M
M = D
@SP
M = M + 1
// pop that 0
@0
D = A
@THAT
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 4
@4
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 20
@20
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 4
@4
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 5
@5
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 21
@21
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 5
@5
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND2
@WHILE_COND2
0 ; JMP
// label WHILE_END2
(WHILE_END2)
// push local 10
@10
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 12
@12
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 10
@10
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 11
@11
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 13
@13
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 11
@11
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 128
@128
D = A
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND1
@WHILE_COND1
0 ; JMP
// label WHILE_END1
(WHILE_END1)
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_RotoZoom.drawFrame
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_RotoZoom.drawFrame
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_RotoZoom.drawFrame
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_RotoZoom.drawFrame
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_RotoZoom.drawFrame
A = M - D
A = M
0 ; JMP

// === MathsToo ===

// function MathsToo.lsl 0
(MathsToo.lsl)
@SP
D = M
@LCL
M = D
// label WHILE_COND1
(WHILE_COND1)
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true121
D ; JGT
D = 0
@comp_end121
0 ; JMP
(comp_true121)
D = 1
(comp_end121)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY1
@SP
AM = M - 1
D = M
@WHILE_BODY1
D ; JNE
// goto WHILE_END1
@WHILE_END1
0 ; JMP
// label WHILE_BODY1
(WHILE_BODY1)
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop argument 0
@0
D = A
@ARG
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop argument 1
@1
D = A
@ARG
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND1
@WHILE_COND1
0 ; JMP
// label WHILE_END1
(WHILE_END1)
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_MathsToo.lsl
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_MathsToo.lsl
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_MathsToo.lsl
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_MathsToo.lsl
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_MathsToo.lsl
A = M - D
A = M
0 ; JMP
// function MathsToo.lsr 4
(MathsToo.lsr)
@SP
D = M
@LCL
M = D
@SP
D = M
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
A = D
M = 0
D = D + 1
@4
D = A
@SP
M = M + D
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop argument 1
@1
D = A
@ARG
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND2
(WHILE_COND2)
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 0
@0
D = A
@SP
A = M
M = D
@SP
M = M + 1
// gt
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true122
D ; JGT
D = 0
@comp_end122
0 ; JMP
(comp_true122)
D = 1
(comp_end122)
@SP
A = M - 1
M = D
// if-goto WHILE_BODY2
@SP
AM = M - 1
D = M
@WHILE_BODY2
D ; JNE
// goto WHILE_END2
@WHILE_END2
0 ; JMP
// label WHILE_BODY2
(WHILE_BODY2)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop argument 1
@1
D = A
@ARG
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND2
@WHILE_COND2
0 ; JMP
// label WHILE_END2
(WHILE_END2)
// push constant 32767
@32767
D = A
@SP
A = M
M = D
@SP
M = M + 1
// neg
@SP
A = M - 1
M = - M
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// pop local 1
@1
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push constant 1
@1
D = A
@SP
A = M
M = D
@SP
M = M + 1
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label WHILE_COND3
(WHILE_COND3)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 1
@1
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// eq
@SP
AM = M - 1
D = M
A = A - 1
D = M - D
@comp_true123
D ; JEQ
D = 0
@comp_end123
0 ; JMP
(comp_true123)
D = 1
(comp_end123)
@SP
A = M - 1
M = D
// not
@SP
A = M - 1
M = ! M
// if-goto WHILE_BODY3
@SP
AM = M - 1
D = M
@WHILE_BODY3
D ; JNE
// goto WHILE_END3
@WHILE_END3
0 ; JMP
// label WHILE_BODY3
(WHILE_BODY3)
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// and
@SP
AM = M - 1
D = M
A = A - 1
M = M & D
// if-goto IF_THEN1
@SP
AM = M - 1
D = M
@IF_THEN1
D ; JNE
// goto IF_END1
@IF_END1
0 ; JMP
// label IF_THEN1
(IF_THEN1)
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// or
@SP
AM = M - 1
D = M
A = A - 1
M = M | D
// pop local 3
@3
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// label IF_END1
(IF_END1)
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 2
@2
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// add
@SP
AM = M - 1
D = M
A = A - 1
M = M + D
// pop local 2
@2
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// goto WHILE_COND3
@WHILE_COND3
0 ; JMP
// label WHILE_END3
(WHILE_END3)
// push local 3
@3
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_MathsToo.lsr
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_MathsToo.lsr
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_MathsToo.lsr
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_MathsToo.lsr
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_MathsToo.lsr
A = M - D
A = M
0 ; JMP
// function MathsToo.mod 1
(MathsToo.mod)
@SP
D = M
@LCL
M = D
@SP
A = M
M = 0
@SP
M = M + 1
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Math.divide 2
@returnPosition659
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.divide
0 ; JMP
(returnPosition659)
// pop local 0
@0
D = A
@LCL
D = M + D
@13
M = D
@SP
AM = M - 1
D = M
@13
A = M
M = D
// push argument 0
@0
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push argument 1
@1
D = A
@ARG
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// push local 0
@0
D = A
@LCL
A = M + D
D = M
@SP
A = M
M = D
@SP
M = M + 1
// call Math.multiply 2
@returnPosition660
D = A
@SP
A = M
M = D
@SP
M = M + 1
@LCL
D = M
@SP
A = M
M = D
@SP
M = M + 1
@ARG
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THIS
D = M
@SP
A = M
M = D
@SP
M = M + 1
@THAT
D = M
@SP
A = M
M = D
@SP
M = M + 1
@7
D = A
@SP
D = M - D
@ARG
M = D
@Math.multiply
0 ; JMP
(returnPosition660)
// sub
@SP
AM = M - 1
D = M
A = A - 1
M = M - D
// return
@SP
A = M - 1
D = M
@ARG
A = M
M = D
@ARG
D = M
@SP
M = D + 1
@LCL
D = M
@thisLCL_MathsToo.mod
M = D
A = D - 1
D = M
@THAT
M = D
@2
D = A
@thisLCL_MathsToo.mod
A = M - D
D = M
@THIS
M = D
@3
D = A
@thisLCL_MathsToo.mod
A = M - D
D = M
@ARG
M = D
@4
D = A
@thisLCL_MathsToo.mod
A = M - D
D = M
@LCL
M = D
@5
D = A
@thisLCL_MathsToo.mod
A = M - D
A = M
0 ; JMP